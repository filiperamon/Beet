<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FM.WebSync</name>
    </assembly>
    <members>
        <member name="T:FM.WebSync.BackoffArgs">
             <summary>
             Arguments used for <see cref="P:FM.WebSync.ConnectArgs.RetryBackoff" />
             </summary>
            </member>
        <member name="P:FM.WebSync.BackoffArgs.LastTimeout">
             <summary>
             Gets or sets last timeout value used.
             </summary>
            </member>
        <member name="P:FM.WebSync.BackoffArgs.Index">
             <summary>
             Gets or sets the current backoff index. Starts at <c>0</c> and
             increments by <c>1</c> for each backoff attempt.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseInputArgs">
             <summary>
             Base input arguments for WebSync <see cref="T:FM.WebSync.Client" /> methods.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseInputArgs.RequestUrl">
             <summary>
             Gets or sets the absolute URL of the WebSync request handler, typically
             ending with websync.ashx, to use for this request. Overrides the
             client-level setting. This request will be sent using the
             <see cref="F:FM.WebSync.Client.StreamRequestTransfer" /> class (especially relevant if
             WebSockets are in use).
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseInputArgs.RequestTimeout">
             <summary>
             Gets or sets the request timeout to use for this request. This will
             override any client-level request timeout settings.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseInputArgs.IsRetry">
             <summary>
             Gets or sets whether this method call is a retry following a failure.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseInputArgs.Synchronous">
             <summary>
             Gets or sets whether the request should be executed asynchronously.
             If <c>true</c>, the request will be executed synchronously.
             If <c>false</c>, the request will be executed asynchronously.
             If <c>null</c>, the request will be executed synchronously or asynchronously,
             depending on the value of <see cref="P:FM.WebSync.Client.Synchronous" />.
             Defaults to <c>null</c>.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseOutputArgs">
             <summary>
             Base output arguments for WebSync <see cref="T:FM.WebSync.Client" /> methods.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseOutputArgs.Timestamp">
             <summary>
             Gets or sets the date/time the message was processed on the server (in UTC/GMT).
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseOutputArgs.Client">
             <summary>
             Gets or sets the active WebSync <see cref="T:FM.WebSync.Client" /> who made the request.
             </summary>
            </member>
        <member name="T:FM.WebSync.BasePublisherResponseEventArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Publisher" /> events that occur
             after a response is received.
             </summary>
            </member>
        <member name="P:FM.WebSync.BasePublisherResponseEventArgs.Exception">
             <summary>
             Gets or sets the exception generated while completing the request, if any.
             Will be <c>null</c> if no exception was generated.
             </summary>
            </member>
        <member name="T:FM.WebSync.BasePublisherResponseEventArgsGeneric`1">
             <summary>
             Generic base arguments for <see cref="T:FM.WebSync.Publisher" /> events that occur
             after a response is received.
             </summary>
            </member>
        <member name="P:FM.WebSync.BasePublisherResponseEventArgsGeneric`1.Requests">
             <summary>
             Gets or sets the requests sent to the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.BasePublisherResponseEventArgsGeneric`1.Responses">
             <summary>
             Gets or sets the responses received from the server.
             </summary>
            </member>
        <member name="T:FM.WebSync.BasePublisherRequestEventArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Publisher" /> events that occur
             before a request is sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.BasePublisherRequestEventArgs.Cancel">
             <summary>
             Gets or sets whether or not to cancel the request.
             If set to <c>true</c>, the request will not be processed.
             Defaults to <c>false</c>.
             </summary>
            </member>
        <member name="T:FM.WebSync.BasePublisherRequestEventArgsGeneric`1">
             <summary>
             Generic base arguments for <see cref="T:FM.WebSync.Publisher" /> events that occur
             before a request is sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.BasePublisherRequestEventArgsGeneric`1.Requests">
             <summary>
             Gets or sets the requests being sent to the server.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseClientEndEventArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Client" /> events that occur
             after a response has been processed.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientEndEventArgs.Response">
             <summary>
             Gets or sets the response received from the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientEndEventArgs.Exception">
             <summary>
             Gets or sets the exception generated while completing the request, if any.
             Will be <c>null</c> if no exception was generated.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseClientEndEventArgsGeneric`1">
             <summary>
             Generic base arguments for <see cref="T:FM.WebSync.Client" /> events that occur
             after a response has been processed.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientEndEventArgsGeneric`1.MethodArgs">
             <summary>
             Gets or sets the original arguments passed into the client method.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientNotifyResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnNotifyResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseServerArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.ConnectArgs" /> "OnServer" callbacks.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseReceiveArgs">
             <summary>
             Arguments for <see cref="P:FM.WebSync.SubscribeArgs.OnReceive" />.
             </summary>
            </member>
        <member name="M:FM.WebSync.BaseReceiveArgs.#ctor(System.String,System.Byte[],FM.WebSync.ConnectionType,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.BaseReceiveArgs" /> class.
             </summary>
             <param name="dataJson">The data in JSON format.</param>
             <param name="dataBytes">The data in binary format.</param>
             <param name="connectionType">The current connection type.</param>
             <param name="reconnectAfter">The amount of time in milliseconds to pause before reconnecting to the server.</param>
            </member>
        <member name="P:FM.WebSync.BaseReceiveArgs.DataJson">
             <summary>
             Gets the data that was sent in JSON format.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseReceiveArgs.DataBytes">
             <summary>
             Gets the data that was sent in binary format.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseReceiveArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseReceiveArgs.Tag">
             <summary>
             Gets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseReceiveArgs.ConnectionType">
             <summary>
             Gets the current connection type.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseReceiveArgs.ReconnectAfter">
             <summary>
             Gets or sets the amount of time in milliseconds to pause
             before reconnecting to the server.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientNotifyRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnNotifyRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientSubscribeEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnSubscribeEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientBindEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnBindEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientConnectEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnConnectEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientDisconnectEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnDisconnectEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientNotifyEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnNotifyEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientPublishEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnPublishEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientServiceEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnServiceEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientUnbindEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnUnbindEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientUnsubscribeEndArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnUnsubscribeEnd" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.StateRestoredArgs">
             <summary>
             Arguments for <see cref="P:FM.WebSync.ConnectArgs.OnStateRestored" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.NotifyReceiveArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnNotify" />.
             </summary>
            </member>
        <member name="M:FM.WebSync.NotifyReceiveArgs.#ctor(System.String,System.Byte[],FM.WebSync.ConnectionType,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.NotifyReceiveArgs" /> class.
             </summary>
             <param name="dataJson">The data in JSON format.</param>
             <param name="dataBytes">The data in binary format.</param>
             <param name="connectionType">The current connection type.</param>
             <param name="reconnectAfter">The amount of time in milliseconds to pause before reconnecting to the server.</param>
            </member>
        <member name="P:FM.WebSync.NotifyReceiveArgs.WasSentByMe">
             <summary>
             Gets whether the data was sent by the current client.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyReceiveArgs.NotifyingClient">
             <summary>
             Gets or sets details about the client sending the notification.
             </summary>
            </member>
        <member name="T:FM.WebSync.ServerSubscribeArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnServerSubscribe" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerSubscribeArgs.Channel">
             <summary>
             Gets or sets the channel to which the client was subscribed.
             Must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.ServerSubscribeArgs.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerSubscribeArgs.Channels">
             <summary>
             Gets or sets the channels to which the client was subscribed.
             Each must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.ServerSubscribeArgs.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerSubscribeArgs.Tag">
             <summary>
             Gets or sets the tag associated with the subscribe request.
             </summary>
            </member>
        <member name="T:FM.WebSync.ServerUnsubscribeArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnServerUnsubscribe" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerUnsubscribeArgs.Channel">
             <summary>
             Gets or sets the channel from which the client was unsubscribed.
             Must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.ServerUnsubscribeArgs.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerUnsubscribeArgs.Channels">
             <summary>
             Gets or sets the channels from which the client was unsubscribed.
             Each must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.ServerUnsubscribeArgs.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerUnsubscribeArgs.Tag">
             <summary>
             Gets or sets the tag associated with the unsubscribe request.
             </summary>
            </member>
        <member name="T:FM.WebSync.ServerUnbindArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnServerUnbind" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerUnbindArgs.Record">
             <summary>
             Gets or sets the record from which the client was unbound.
             Overrides <see cref="P:FM.WebSync.ServerUnbindArgs.Records" />, <see cref="P:FM.WebSync.ServerUnbindArgs.Key" />, and <see cref="P:FM.WebSync.ServerUnbindArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerUnbindArgs.Records">
             <summary>
             Gets or sets the records from which the client was unbound.
             Overrides <see cref="T:FM.WebSync.Record" />, <see cref="P:FM.WebSync.ServerUnbindArgs.Key" />, and <see cref="P:FM.WebSync.ServerUnbindArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerUnbindArgs.Key">
             <summary>
             Gets or sets the record key from which the client was unbound.
             Overrides <see cref="P:FM.WebSync.ServerUnbindArgs.Keys" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.ServerUnbindArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerUnbindArgs.Keys">
             <summary>
             Gets or sets the record keys from which the client was unbound.
             Overrides <see cref="P:FM.WebSync.ServerUnbindArgs.Key" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.ServerUnbindArgs.Records" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ServerBindArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnServerBind" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerBindArgs.Record">
             <summary>
             Gets or sets the record to which the client was bound.
             Overrides <see cref="P:FM.WebSync.ServerBindArgs.Records" />, <see cref="P:FM.WebSync.ServerBindArgs.Key" />, and <see cref="P:FM.WebSync.ServerBindArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerBindArgs.Records">
             <summary>
             Gets or sets the records to which the client was bound.
             Overrides <see cref="T:FM.WebSync.Record" />, <see cref="P:FM.WebSync.ServerBindArgs.Key" />, and <see cref="P:FM.WebSync.ServerBindArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerBindArgs.Key">
             <summary>
             Gets or sets the record key to which the client was bound.
             Overrides <see cref="P:FM.WebSync.ServerBindArgs.Keys" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.ServerBindArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServerBindArgs.Keys">
             <summary>
             Gets or sets the record keys to which the client was bound.
             Overrides <see cref="P:FM.WebSync.ServerBindArgs.Key" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.ServerBindArgs.Records" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.MessageRequestCreatedArgs">
             <summary>
             Arguments passed into callbacks when a message request is created.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestCreatedArgs.Sender">
             <summary>
             Gets or sets the sender of the request, either a client or publisher.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestCreatedArgs.Requests">
             <summary>
             Gets or sets the outgoing messages about to be sent to the server.
             </summary>
            </member>
        <member name="T:FM.WebSync.MessageResponseReceivedArgs">
             <summary>
             Arguments passed into callbacks when a message response is created.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageResponseReceivedArgs.Sender">
             <summary>
             Gets or sets the sender of the request, either a client or publisher.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageResponseReceivedArgs.Responses">
             <summary>
             Gets or sets the incoming messages about to be processed by the client.
             </summary>
            </member>
        <member name="T:FM.WebSync.MessageRequestArgs">
             <summary>
             Arguments for sending a message request.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.Sender">
             <summary>
             Gets or sets the sender of the content, either a client or publisher.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.Messages">
             <summary>
             Gets or sets the messages to transfer.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.Url">
             <summary>
             Gets or sets the target URL for the request.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.Headers">
             <summary>
             Gets or sets the headers for the request.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.Timeout">
             <summary>
             Gets or sets the number of milliseconds to wait before timing out the transfer.
             Defaults to 15000 (15 seconds).
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.OnRequestCreated">
             <summary>
             Gets or sets the callback to invoke whenever a new request is created
             and about to be transferred to the server. This is a good place to read
             or modify outgoing messages.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.OnResponseReceived">
             <summary>
             Gets or sets the callback to invoke whenever a new response is received
             and about to be processed by the client. This is a good place to read
             or modify incoming messages.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.OnHttpRequestCreated">
             <summary>
             Gets or sets the callback to invoke whenever an underlying HTTP request
             has been created and is about to be transferred to the server. This is a
             good place to add headers/cookies. For WebSocket streams, this will fire
             only once for the initial HTTP-based handshake.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.OnHttpResponseReceived">
             <summary>
             Gets or sets the callback to invoke whenever an underlying HTTP response
             has been received and is about to be processed by the client. This is a
             good place to read headers/cookies. For WebSocket streams, this will fire
             only once for the initial HTTP-based handshake.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageRequestArgs.IsBinary">
             <summary>
             Gets whether or not each message in the batch is in binary format and can
             be tranferred as such.
             </summary>
            </member>
        <member name="M:FM.WebSync.MessageRequestArgs.#ctor(System.Collections.Specialized.NameValueCollection)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.MessageRequestArgs" /> class
             with default values.
             </summary>
            </member>
        <member name="T:FM.WebSync.MessageResponseArgs">
             <summary>
             Arguments for receiving a message response.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageResponseArgs.Messages">
             <summary>
             Gets or sets the messages read from the response.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageResponseArgs.Headers">
             <summary>
             Gets or sets the headers for the response.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageResponseArgs.Exception">
             <summary>
             Gets or sets the exception generated while completing the request.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageResponseArgs.RequestArgs">
             <summary>
             Gets or sets the original <see cref="T:FM.WebSync.MessageRequestArgs" />.
             </summary>
            </member>
        <member name="M:FM.WebSync.MessageResponseArgs.#ctor(FM.WebSync.MessageRequestArgs)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.MessageResponseArgs" /> class.
             </summary>
             <param name="requestArgs">The request arguments.</param>
            </member>
        <member name="T:FM.WebSync.NotifyArgs">
             <summary>
             Arguments for client notify requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after <see cref="P:FM.WebSync.NotifyArgs.OnSuccess" /> or <see cref="P:FM.WebSync.NotifyArgs.OnFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyArgs.OnFailure">
             <summary>
             Gets or sets the callback to invoke if the request fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyArgs.OnSuccess">
             <summary>
             Gets or sets the callback to invoke if the request succeeds.
             </summary>
            </member>
        <member name="M:FM.WebSync.NotifyArgs.#ctor(System.Guid,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.NotifyArgs" /> class.
             </summary>
             <param name="clientId">The client ID to which the data should be sent.</param>
             <param name="dataJson">The data to send in JSON format.</param>
            </member>
        <member name="M:FM.WebSync.NotifyArgs.#ctor(System.Guid,System.Byte[])">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.NotifyArgs" /> class.
             </summary>
             <param name="clientId">The client ID to which the data should be sent.</param>
             <param name="dataBytes">The data to send in binary format.</param>
            </member>
        <member name="M:FM.WebSync.NotifyArgs.#ctor(System.Guid,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.NotifyArgs" /> class.
             </summary>
             <param name="clientId">The client ID to which the data should be sent.</param>
             <param name="dataJson">The data to send in JSON format.</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="M:FM.WebSync.NotifyArgs.#ctor(System.Guid,System.Byte[],System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.NotifyArgs" /> class.
             </summary>
             <param name="clientId">The client ID to which the data should be sent.</param>
             <param name="dataBytes">The data to send in binary format.</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="P:FM.WebSync.NotifyArgs.ClientId">
             <summary>
             Gets or sets the client ID to notify.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyArgs.DataJson">
             <summary>
             Gets or sets the data to send in JSON format.
             (Overrides <see cref="P:FM.WebSync.NotifyArgs.DataBytes" />.)
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyArgs.DataBytes">
             <summary>
             Gets or sets the data to send in binary format.
             (Overrides <see cref="P:FM.WebSync.NotifyArgs.DataJson" />.)
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyArgs.Tag">
             <summary>
             Gets or sets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.NotifyCompleteArgs">
             <summary>
             Arguments for notify complete callbacks.
             </summary>
            </member>
        <member name="T:FM.WebSync.NotifyFailureArgs">
             <summary>
             Arguments for notify failure callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyFailureArgs.ClientId">
             <summary>
             Gets the client ID to which the data failed to be sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyFailureArgs.DataJson">
             <summary>
             Gets the data that failed to be sent in JSON format.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyFailureArgs.DataBytes">
             <summary>
             Gets the data that failed to be sent in binary format.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyFailureArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyFailureArgs.Tag">
             <summary>
             Gets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.NotifySuccessArgs">
             <summary>
             Arguments for notify success callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifySuccessArgs.ClientId">
             <summary>
             Gets the client ID to which the data was sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifySuccessArgs.DataJson">
             <summary>
             Gets the data that was sent in JSON format.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifySuccessArgs.DataBytes">
             <summary>
             Gets the data that was sent in binary format.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifySuccessArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifySuccessArgs.Tag">
             <summary>
             Gets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublisherNotifyResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Publisher.OnNotifyResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublisherNotifyRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Publisher.OnNotifyRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnhandledExceptionArgs">
             <summary>
             Arguments for an unhandled exception.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnhandledExceptionArgs.Handled">
             <summary>
             Gets or sets whether the exception has been
             appropriately handled. If set to <c>true</c>,
             then the exception will not be thrown.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnhandledExceptionArgs.Exception">
             <summary>
             Gets the unhandled exception.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientResponseArgs">
             <summary>
             The internal representation of data received in response to a client request.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientResponseArgs.Response">
             <summary>
             Gets or sets the first response received from the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientResponseArgs.Responses">
             <summary>
             Gets or sets the responses received from the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientResponseArgs.Exception">
             <summary>
             Gets or sets the exception generated by the request.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientResponseArgs.ErrorCode">
             <summary>
             Gets the error code value, if the exception was generated by WebSync; otherwise -1.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientResponseArgs.ErrorMessage">
             <summary>
             Gets the error message value, if the exception was generated by WebSync; otherwise <c>null</c>.
             </summary>
            </member>
        <member name="T:FM.WebSync.RetryBackoffCallback">
             <summary>
             Method signature for calculating the backoff interval for a connect retry.
             </summary>
             <param name="args">The backoff arguments.</param>
             <returns>The amount of time in milliseconds to wait before retrying.</returns>
            </member>
        <member name="T:FM.WebSync.ConnectArgs">
             <summary>
             Arguments for client connect requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after <see cref="P:FM.WebSync.ConnectArgs.OnSuccess" /> or <see cref="P:FM.WebSync.ConnectArgs.OnFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.OnFailure">
             <summary>
             Gets or sets the callback to invoke if the request fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.OnSuccess">
             <summary>
             Gets or sets the callback to invoke if the request succeeds.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.OnStreamFailure">
             <summary>
             Gets or sets the callback to invoke if the streaming connection fails.
             See <see cref="T:FM.WebSync.StreamFailureArgs" /> for callback argument details.
             </summary>
             <remarks>
             <para>
             This method will be invoked if the connection was lost or the client
             record no longer exists on the server (either due to network loss or
             an application pool recycle). In either case, the client will automatically
             reconnect after firing this callback. If the reconnect succeeds, the
             OnSuccess callback will be invoked with <see cref="P:FM.WebSync.ConnectSuccessArgs.IsReconnect" />
             set to <c>true</c>. If the reconnect succeeds, the OnFailure callback
             will be invoked with <see cref="P:FM.WebSync.ConnectFailureArgs.IsReconnect" /> set
             to <c>true</c>.
             </para>
             <para>
             This is the recommended place to perform any UI updates necessary to
             inform the application user that the connection has been temporarily
             lost. Any UI components shown by this callback can be hidden in
             either OnSuccess or OnFailure.
             </para>
             </remarks>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.OnStateRestored">
             <summary>
             Gets or sets the callback to invoke after all bindings and subscriptions
             are restored following a reconnect.
             See <see cref="T:FM.WebSync.StateRestoredArgs" /> for callback argument details.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.RetryMode">
             <summary>
             Gets or sets the mode under which the client is expected to operate when
             a connect handshake fails. This property controls the default value of
             <see cref="P:FM.WebSync.BaseFailureArgs.Retry" /> in <see cref="T:FM.WebSync.ConnectFailureArgs" />,
             which can be overridden.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.RetryBackoff">
             <summary>
             Gets or sets the backoff algorithm to use when retrying a failed connect handshake.
             Used to calculate the sleep timeout before retrying if <see cref="P:FM.WebSync.BaseFailureArgs.Retry" />
             is set to <c>true</c> in <see cref="T:FM.WebSync.ConnectFailureArgs" />. The function should return
             the desired timeout in milliseconds.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.IsReconnect">
             <summary>
             Gets or sets whether or not the connect is occurring because the connection has been lost and needs to be re-negotiated.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.LastClientId">
             <summary>
             Gets or sets the last client ID.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectArgs.LastSessionId">
             <summary>
             Gets or sets the last session ID.
             </summary>
            </member>
        <member name="M:FM.WebSync.ConnectArgs.#ctor">
             <summary>
             Creates a new instance of <see cref="T:FM.WebSync.ConnectArgs" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.BindArgs">
             <summary>
             Arguments for client bind requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after <see cref="P:FM.WebSync.BindArgs.OnSuccess" /> or <see cref="P:FM.WebSync.BindArgs.OnFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindArgs.OnFailure">
             <summary>
             Gets or sets the callback to invoke if the request fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindArgs.OnSuccess">
             <summary>
             Gets or sets the callback to invoke if the request succeeds.
             </summary>
            </member>
        <member name="M:FM.WebSync.BindArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.BindArgs" /> class.
             </summary>
             <param name="key">The record key.</param>
             <param name="valueJson">The record value in JSON format.</param>
            </member>
        <member name="M:FM.WebSync.BindArgs.#ctor(System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.BindArgs" /> class.
             </summary>
             <param name="key">The record key.</param>
             <param name="valueJson">The record value in JSON format.</param>
             <param name="priv">Whether the record is (to be) private.</param>
            </member>
        <member name="M:FM.WebSync.BindArgs.#ctor(FM.WebSync.Record)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.BindArgs" /> class.
             </summary>
             <param name="record">The record to bind.</param>
            </member>
        <member name="M:FM.WebSync.BindArgs.#ctor(FM.WebSync.Record[])">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.BindArgs" /> class.
             </summary>
             <param name="records">The records to bind.</param>
            </member>
        <member name="P:FM.WebSync.BindArgs.Record">
             <summary>
             Gets or sets the record to bind.
             Overrides <see cref="P:FM.WebSync.BindArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindArgs.Records">
             <summary>
             Gets or sets the records to bind.
             Overrides <see cref="T:FM.WebSync.Record" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindArgs.AutoRebind">
             <summary>
             Gets or sets whether to call Bind with these args
             immediately after a reconnect following a stream failure.
             Generally, this should be <c>null</c>. The client will
             analyze the current context and set this flag as needed.
             However, it can be overridden for special cases. If set
             explicitly to <c>false</c>, then the client will assume
             that this call to Bind is being invoked from the
             OnSuccess callback of another WebSync method call, and
             therefore will be called again implicitly after a
             network reconnection. If set to
             <c>true</c>, then the client will assume this call to
             Bind is being invoked as a part of some external
             action and will force a Bind call using these arguments
             after a network reconnection. Defaults to <c>null</c>.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindArgs.IsRebind">
             <summary>
             Gets or sets whether or not the bind is occurring because the connection has been lost and re-negotiated.
             </summary>
            </member>
        <member name="T:FM.WebSync.ServiceArgs">
             <summary>
             Arguments for client service requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after <see cref="P:FM.WebSync.ServiceArgs.OnSuccess" /> or <see cref="P:FM.WebSync.ServiceArgs.OnFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceArgs.OnFailure">
             <summary>
             Gets or sets the callback to invoke if the request fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceArgs.OnSuccess">
             <summary>
             Gets or sets the callback to invoke if the request succeeds.
             </summary>
            </member>
        <member name="M:FM.WebSync.ServiceArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.ServiceArgs" /> class.
             </summary>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataJson">The data to send in JSON format.</param>
            </member>
        <member name="M:FM.WebSync.ServiceArgs.#ctor(System.String,System.Byte[])">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.ServiceArgs" /> class.
             </summary>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataBytes">The data to send in binary format.</param>
            </member>
        <member name="M:FM.WebSync.ServiceArgs.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.ServiceArgs" /> class.
             </summary>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataJson">The data to send in JSON format.</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="M:FM.WebSync.ServiceArgs.#ctor(System.String,System.Byte[],System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.ServiceArgs" /> class.
             </summary>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataBytes">The data to send in binary format.</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="P:FM.WebSync.ServiceArgs.Channel">
             <summary>
             Gets or sets the channel to which the data should be sent.
             Must start with a forward slash (/).
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceArgs.DataJson">
             <summary>
             Gets or sets the data to send in JSON format.
             (Overrides <see cref="P:FM.WebSync.ServiceArgs.DataBytes" />.)
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceArgs.DataBytes">
             <summary>
             Gets or sets the data to send in binary format.
             (Overrides <see cref="P:FM.WebSync.ServiceArgs.DataJson" />.)
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceArgs.Tag">
             <summary>
             Gets or sets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnbindArgs">
             <summary>
             Arguments for client unbind requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after <see cref="P:FM.WebSync.UnbindArgs.OnSuccess" /> or <see cref="P:FM.WebSync.UnbindArgs.OnFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindArgs.OnFailure">
             <summary>
             Gets or sets the callback to invoke if the request fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindArgs.OnSuccess">
             <summary>
             Gets or sets the callback to invoke if the request succeeds.
             </summary>
            </member>
        <member name="M:FM.WebSync.UnbindArgs.#ctor(FM.WebSync.Record)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.UnbindArgs" /> class.
             </summary>
             <param name="record">The record to unbind.</param>
            </member>
        <member name="M:FM.WebSync.UnbindArgs.#ctor(FM.WebSync.Record[])">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.UnbindArgs" /> class.
             </summary>
             <param name="records">The records to unbind.</param>
            </member>
        <member name="M:FM.WebSync.UnbindArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.UnbindArgs" /> class.
             </summary>
             <param name="key">The key to unbind.</param>
            </member>
        <member name="M:FM.WebSync.UnbindArgs.#ctor(System.String[])">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.UnbindArgs" /> class.
             </summary>
             <param name="keys">The keys to unbind.</param>
            </member>
        <member name="P:FM.WebSync.UnbindArgs.Record">
             <summary>
             Gets or sets the record to unbind.
             Overrides <see cref="P:FM.WebSync.UnbindArgs.Records" />, <see cref="P:FM.WebSync.UnbindArgs.Key" />, and <see cref="P:FM.WebSync.UnbindArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindArgs.Records">
             <summary>
             Gets or sets the records to unbind.
             Overrides <see cref="T:FM.WebSync.Record" />, <see cref="P:FM.WebSync.UnbindArgs.Key" />, and <see cref="P:FM.WebSync.UnbindArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindArgs.Key">
             <summary>
             Gets or sets the record key to unbind.
             Overrides <see cref="P:FM.WebSync.UnbindArgs.Keys" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.UnbindArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindArgs.Keys">
             <summary>
             Gets or sets the record keys to unbind.
             Overrides <see cref="P:FM.WebSync.UnbindArgs.Key" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.UnbindArgs.Records" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.DisconnectArgs">
             <summary>
             Arguments for client disconnect requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.DisconnectArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after the disconnection is complete.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublishArgs">
             <summary>
             Arguments for client publish requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after <see cref="P:FM.WebSync.PublishArgs.OnSuccess" /> or <see cref="P:FM.WebSync.PublishArgs.OnFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishArgs.OnFailure">
             <summary>
             Gets or sets the callback to invoke if the request fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishArgs.OnSuccess">
             <summary>
             Gets or sets the callback to invoke if the request succeeds.
             </summary>
            </member>
        <member name="M:FM.WebSync.PublishArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.PublishArgs" /> class.
             </summary>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataJson">The data to send in JSON format.</param>
            </member>
        <member name="M:FM.WebSync.PublishArgs.#ctor(System.String,System.Byte[])">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.PublishArgs" /> class.
             </summary>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataBytes">The data to send in binary format.</param>
            </member>
        <member name="M:FM.WebSync.PublishArgs.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.PublishArgs" /> class.
             </summary>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataJson">The data to send in JSON format.</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="M:FM.WebSync.PublishArgs.#ctor(System.String,System.Byte[],System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.PublishArgs" /> class.
             </summary>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataBytes">The data to send in binary format.</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="P:FM.WebSync.PublishArgs.Channel">
             <summary>
             Gets or sets the channel to which the data should be sent.
             Must start with a forward slash (/).
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishArgs.DataJson">
             <summary>
             Gets or sets the data to send in JSON format.
             (Overrides <see cref="P:FM.WebSync.PublishArgs.DataBytes" />.)
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishArgs.DataBytes">
             <summary>
             Gets or sets the data to send in binary format.
             (Overrides <see cref="P:FM.WebSync.PublishArgs.DataJson" />.)
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishArgs.Tag">
             <summary>
             Gets or sets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.SubscribeArgs">
             <summary>
             Arguments for client subscribe requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after <see cref="P:FM.WebSync.SubscribeArgs.OnSuccess" /> or <see cref="P:FM.WebSync.SubscribeArgs.OnFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.OnFailure">
             <summary>
             Gets or sets the callback to invoke if the request fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.OnSuccess">
             <summary>
             Gets or sets the callback to invoke if the request succeeds.
             </summary>
            </member>
        <member name="M:FM.WebSync.SubscribeArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.SubscribeArgs" /> class.
             </summary>
             <param name="channel">The channel to subscribe.</param>
            </member>
        <member name="M:FM.WebSync.SubscribeArgs.#ctor(System.String[])">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.SubscribeArgs" /> class.
             </summary>
             <param name="channels">The channels to subscribe.</param>
            </member>
        <member name="M:FM.WebSync.SubscribeArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.SubscribeArgs" /> class.
             </summary>
             <param name="channel">The channel to subscribe.</param>
             <param name="tag">The tag identifying the subscription.</param>
            </member>
        <member name="M:FM.WebSync.SubscribeArgs.#ctor(System.String[],System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.SubscribeArgs" /> class.
             </summary>
             <param name="channels">The channels to subscribe.</param>
             <param name="tag">The tag identifying the subscription.</param>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.OnReceive">
             <summary>
             Gets or sets the callback to invoke when data is received on the channel(s).
             See <see cref="T:FM.WebSync.SubscribeReceiveArgs" /> for callback argument details.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.Channel">
             <summary>
             Gets or sets the channel to which the client should be subscribed.
             Must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.SubscribeArgs.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.Channels">
             <summary>
             Gets or sets the channels to which the client should be subscribed.
             Each must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.SubscribeArgs.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.Tag">
             <summary>
             Gets or sets a tag that will uniquely identify this subscription so it
             can be unsubscribed later without affecting other subscriptions with the same channel.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.AutoResubscribe">
             <summary>
             Gets or sets whether to call Subscribe with these args
             immediately after a reconnect following a stream failure.
             Generally, this should be <c>null</c>. The client will
             analyze the current context and set this flag as needed.
             However, it can be overridden for special cases. If set
             explicitly to <c>false</c>, then the client will assume
             that this call to Subscribe is being invoked from the
             OnSuccess callback of another WebSync method call, and
             therefore will be called again implicitly after a
             network reconnection. If set to
             <c>true</c>, then the client will assume this call to
             Subscribe is being invoked as a part of some external
             action and will force a Subscribe call using these arguments
             after a network reconnection. Defaults to <c>null</c>.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeArgs.IsResubscribe">
             <summary>
             Gets or sets whether or not the subscribe is occurring because the connection has been lost and re-negotiated.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnsubscribeArgs">
             <summary>
             Arguments for client unsubscribe requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeArgs.OnComplete">
             <summary>
             Gets or sets the callback to invoke after <see cref="P:FM.WebSync.UnsubscribeArgs.OnSuccess" /> or <see cref="P:FM.WebSync.UnsubscribeArgs.OnFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeArgs.OnFailure">
             <summary>
             Gets or sets the callback to invoke if the request fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeArgs.OnSuccess">
             <summary>
             Gets or sets the callback to invoke if the request succeeds.
             </summary>
            </member>
        <member name="M:FM.WebSync.UnsubscribeArgs.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.UnsubscribeArgs" /> class.
             </summary>
             <param name="channel">The channel to unsubscribe.</param>
            </member>
        <member name="M:FM.WebSync.UnsubscribeArgs.#ctor(System.String[])">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.UnsubscribeArgs" /> class.
             </summary>
             <param name="channels">The channels to unsubscribe.</param>
            </member>
        <member name="M:FM.WebSync.UnsubscribeArgs.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.UnsubscribeArgs" /> class.
             </summary>
             <param name="channel">The channel to unsubscribe.</param>
             <param name="tag">The tag identifying the subscription.</param>
            </member>
        <member name="M:FM.WebSync.UnsubscribeArgs.#ctor(System.String[],System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.UnsubscribeArgs" /> class.
             </summary>
             <param name="channels">The channels to unsubscribe.</param>
             <param name="tag">The tag identifying the subscription.</param>
            </member>
        <member name="P:FM.WebSync.UnsubscribeArgs.Channel">
             <summary>
             Gets or sets the channel from which the client should be unsubscribed.
             Must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.UnsubscribeArgs.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeArgs.Channels">
             <summary>
             Gets or sets the channels from which the client should be unsubscribed.
             Each must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.UnsubscribeArgs.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeArgs.Tag">
             <summary>
             Gets or sets a tag that uniquely identifies a subscription so
             other subscriptions with the same channel are not affected.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseCompleteArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Client" /> "OnComplete" callbacks.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseClientEventArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Client" />-triggered events.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientEventArgs.Client">
             <summary>
             Gets or sets the <see cref="T:FM.WebSync.Client" /> triggering the event.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseFailureArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Client" /> "OnFailure" callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseFailureArgs.Exception">
             <summary>
             Gets or sets the exception generated while completing the request.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseFailureArgs.ErrorCode">
             <summary>
             Gets the error code value, if the exception was generated by WebSync; otherwise -1.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseFailureArgs.ErrorMessage">
             <summary>
             Gets the error message value, if the exception was generated by WebSync; otherwise <c>null</c>.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseFailureArgs.Retry">
             <summary>
             Gets or sets whether or not to retry automatically after completing this operation.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseSuccessArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Client" /> "OnSuccess" callbacks.
             </summary>
            </member>
        <member name="T:FM.WebSync.ConnectCompleteArgs">
             <summary>
             Arguments for connect complete callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectCompleteArgs.IsReconnect">
             <summary>
             Gets or sets whether the connect call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.BindCompleteArgs">
             <summary>
             Arguments for bind complete callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindCompleteArgs.IsRebind">
             <summary>
             Gets or sets whether the bind call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.ServiceCompleteArgs">
             <summary>
             Arguments for service complete callbacks.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnbindCompleteArgs">
             <summary>
             Arguments for unbind complete callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindCompleteArgs.Forced">
             <summary>
             Gets whether this unbind was forced due to a disconnect.
             </summary>
            </member>
        <member name="T:FM.WebSync.DisconnectCompleteArgs">
             <summary>
             Arguments for disconnect complete callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.DisconnectCompleteArgs.Exception">
             <summary>
             Gets or sets the exception that was thrown while disconnecting.
             Will be <c>null</c> if the disconnect was performed gracefully.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublishCompleteArgs">
             <summary>
             Arguments for publish complete callbacks.
             </summary>
            </member>
        <member name="T:FM.WebSync.SubscribeCompleteArgs">
             <summary>
             Arguments for subscribe complete callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeCompleteArgs.IsResubscribe">
             <summary>
             Gets or sets whether the subscribe call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnsubscribeCompleteArgs">
             <summary>
             Arguments for unsubscribe complete callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeCompleteArgs.Forced">
             <summary>
             Gets whether this unsubscribe was forced due to a disconnect.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientConnectResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnConnectResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientDisconnectResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnDisconnectResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientPublishResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnPublishResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientSubscribeResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnSubscribeResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientUnsubscribeResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnUnsubscribeResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientBindResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnBindResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientUnbindResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnUnbindResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientServiceResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnServiceResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientConnectRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnConnectRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientDisconnectRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnDisconnectRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientPublishRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnPublishRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientSubscribeRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnSubscribeRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientUnsubscribeRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnUnsubscribeRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientBindRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnBindRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientUnbindRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnUnbindRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientServiceRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Client.OnServiceRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseClientResponseEventArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Client" /> events that occur
             after a response is received.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientResponseEventArgs.Response">
             <summary>
             Gets or sets the response received from the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientResponseEventArgs.Exception">
             <summary>
             Gets or sets the exception generated while completing the request, if any.
             Will be <c>null</c> if no exception was generated.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseClientResponseEventArgsGeneric`1">
             <summary>
             Generic base arguments for <see cref="T:FM.WebSync.Client" /> events that occur
             after a response is received.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientResponseEventArgsGeneric`1.MethodArgs">
             <summary>
             Gets or sets the original arguments passed into the client method.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseClientRequestEventArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Client" /> events that occur
             before a request is sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientRequestEventArgs.Cancel">
             <summary>
             Gets or sets whether or not to cancel the request.
             If set to <c>true</c>, the request will not be processed.
             Defaults to <c>false</c>.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseClientRequestEventArgsGeneric`1">
             <summary>
             Generic base arguments for <see cref="T:FM.WebSync.Client" /> events that occur
             before a request is sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClientRequestEventArgsGeneric`1.MethodArgs">
             <summary>
             Gets or sets the original arguments passed into the client method.
             </summary>
            </member>
        <member name="T:FM.WebSync.ConnectFailureArgs">
             <summary>
             Arguments for connect failure callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectFailureArgs.IsReconnect">
             <summary>
             Gets or sets whether the connect call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.BindFailureArgs">
             <summary>
             Arguments for bind failure callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindFailureArgs.Record">
             <summary>
             Gets the record to which the client failed to be bound.
             Overrides <see cref="P:FM.WebSync.BindFailureArgs.Records" />, <see cref="P:FM.WebSync.BindFailureArgs.Key" />, and <see cref="P:FM.WebSync.BindFailureArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindFailureArgs.Records">
             <summary>
             Gets the records to which the client failed to be bound.
             Overrides <see cref="T:FM.WebSync.Record" />, <see cref="P:FM.WebSync.BindFailureArgs.Key" />, and <see cref="P:FM.WebSync.BindFailureArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindFailureArgs.Key">
             <summary>
             Gets the record key to which the client failed to be bound.
             Overrides <see cref="P:FM.WebSync.BindFailureArgs.Keys" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.BindFailureArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindFailureArgs.Keys">
             <summary>
             Gets the record keys to which the client failed to be bound.
             Overrides <see cref="P:FM.WebSync.BindFailureArgs.Key" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.BindFailureArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindFailureArgs.IsRebind">
             <summary>
             Gets or sets whether the bind call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.ServiceFailureArgs">
             <summary>
             Arguments for service failure callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceFailureArgs.Channel">
             <summary>
             Gets the channel to which the data failed to be sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceFailureArgs.DataJson">
             <summary>
             Gets the data that failed to be sent in JSON format.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceFailureArgs.DataBytes">
             <summary>
             Gets the data that failed to be sent in binary format.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceFailureArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceFailureArgs.Tag">
             <summary>
             Gets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnbindFailureArgs">
             <summary>
             Arguments for unbind failure callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindFailureArgs.Record">
             <summary>
             Gets the record from which the client failed to be unbound.
             Overrides <see cref="P:FM.WebSync.UnbindFailureArgs.Records" />, <see cref="P:FM.WebSync.UnbindFailureArgs.Key" />, and <see cref="P:FM.WebSync.UnbindFailureArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindFailureArgs.Records">
             <summary>
             Gets the records from which the client failed to be unbound.
             Overrides <see cref="T:FM.WebSync.Record" />, <see cref="P:FM.WebSync.UnbindFailureArgs.Key" />, and <see cref="P:FM.WebSync.UnbindFailureArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindFailureArgs.Key">
             <summary>
             Gets the record key from which the client failed to be unbound.
             Overrides <see cref="P:FM.WebSync.UnbindFailureArgs.Keys" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.UnbindFailureArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindFailureArgs.Keys">
             <summary>
             Gets the record keys from which the client failed to be unbound.
             Overrides <see cref="P:FM.WebSync.UnbindFailureArgs.Key" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.UnbindFailureArgs.Records" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.StreamFailureArgs">
             <summary>
             Arguments for <see cref="P:FM.WebSync.ConnectArgs.OnStreamFailure" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.StreamFailureArgs.ConnectArgs">
             <summary>
             Gets or sets the connect arguments to use
             for the next connect attempt.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublishFailureArgs">
             <summary>
             Arguments for publish failure callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishFailureArgs.Channel">
             <summary>
             Gets the channel to which the data failed to be sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishFailureArgs.DataJson">
             <summary>
             Gets the data that failed to be sent in JSON format.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishFailureArgs.DataBytes">
             <summary>
             Gets the data that failed to be sent in binary format.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishFailureArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishFailureArgs.Tag">
             <summary>
             Gets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.SubscribeFailureArgs">
             <summary>
             Arguments for subscribe failure callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeFailureArgs.Channel">
             <summary>
             Gets the channel to which the client failed to be subscribed.
             Must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.SubscribeFailureArgs.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeFailureArgs.Channels">
             <summary>
             Gets the channels to which the client failed to be subscribed.
             Each must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.SubscribeFailureArgs.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeFailureArgs.Tag">
             <summary>
             Gets the tag associated with the subscribe request.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeFailureArgs.IsResubscribe">
             <summary>
             Gets or sets whether the subscribe call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnsubscribeFailureArgs">
             <summary>
             Arguments for unsubscribe failure callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeFailureArgs.Channel">
             <summary>
             Gets the channel from which the client failed to be unsubscribed.
             Must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.UnsubscribeFailureArgs.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeFailureArgs.Channels">
             <summary>
             Gets the channels from which the client failed to be unsubscribed.
             Each must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.UnsubscribeFailureArgs.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeFailureArgs.Tag">
             <summary>
             Gets the tag associated with the subscribe request.
             </summary>
            </member>
        <member name="T:FM.WebSync.ConnectSuccessArgs">
             <summary>
             Arguments for connect success callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectSuccessArgs.ConnectionType">
             <summary>
             Gets or sets the connection type of the stream.
             </summary>
            </member>
        <member name="P:FM.WebSync.ConnectSuccessArgs.IsReconnect">
             <summary>
             Gets or sets whether the connect call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.BindSuccessArgs">
             <summary>
             Arguments for bind success callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindSuccessArgs.Record">
             <summary>
             Gets the record to which the client was bound.
             Overrides <see cref="P:FM.WebSync.BindSuccessArgs.Records" />, <see cref="P:FM.WebSync.BindSuccessArgs.Key" />, and <see cref="P:FM.WebSync.BindSuccessArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindSuccessArgs.Records">
             <summary>
             Gets the records to which the client was bound.
             Overrides <see cref="T:FM.WebSync.Record" />, <see cref="P:FM.WebSync.BindSuccessArgs.Key" />, and <see cref="P:FM.WebSync.BindSuccessArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindSuccessArgs.Key">
             <summary>
             Gets the record key to which the client was bound.
             Overrides <see cref="P:FM.WebSync.BindSuccessArgs.Keys" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.BindSuccessArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindSuccessArgs.Keys">
             <summary>
             Gets the record keys to which the client was bound.
             Overrides <see cref="P:FM.WebSync.BindSuccessArgs.Key" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.BindSuccessArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.BindSuccessArgs.IsRebind">
             <summary>
             Gets or sets whether the bind call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.ServiceSuccessArgs">
             <summary>
             Arguments for service success callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceSuccessArgs.Channel">
             <summary>
             Gets the channel to which the data was sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceSuccessArgs.DataJson">
             <summary>
             Gets the data that was sent in JSON format.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceSuccessArgs.DataBytes">
             <summary>
             Gets the data that was sent in binary format.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceSuccessArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.ServiceSuccessArgs.Tag">
             <summary>
             Gets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnbindSuccessArgs">
             <summary>
             Arguments for unbind success callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindSuccessArgs.Record">
             <summary>
             Gets the record from which the client was unbound.
             Overrides <see cref="P:FM.WebSync.UnbindSuccessArgs.Records" />, <see cref="P:FM.WebSync.UnbindSuccessArgs.Key" />, and <see cref="P:FM.WebSync.UnbindSuccessArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindSuccessArgs.Records">
             <summary>
             Gets the records from which the client was unbound.
             Overrides <see cref="T:FM.WebSync.Record" />, <see cref="P:FM.WebSync.UnbindSuccessArgs.Key" />, and <see cref="P:FM.WebSync.UnbindSuccessArgs.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindSuccessArgs.Key">
             <summary>
             Gets the record key from which the client was unbound.
             Overrides <see cref="P:FM.WebSync.UnbindSuccessArgs.Keys" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.UnbindSuccessArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindSuccessArgs.Keys">
             <summary>
             Gets the record keys from which the client was unbound.
             Overrides <see cref="P:FM.WebSync.UnbindSuccessArgs.Key" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.UnbindSuccessArgs.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnbindSuccessArgs.Forced">
             <summary>
             Gets whether this unbind was forced due to a disconnect.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublishSuccessArgs">
             <summary>
             Arguments for publish success callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishSuccessArgs.Channel">
             <summary>
             Gets the channel to which the data was sent.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishSuccessArgs.DataJson">
             <summary>
             Gets the data that was sent in JSON format.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishSuccessArgs.DataBytes">
             <summary>
             Gets the data that was sent in binary format.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishSuccessArgs.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishSuccessArgs.Tag">
             <summary>
             Gets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="T:FM.WebSync.SubscribeReceiveArgs">
             <summary>
             Arguments for <see cref="P:FM.WebSync.SubscribeArgs.OnReceive" />.
             </summary>
            </member>
        <member name="M:FM.WebSync.SubscribeReceiveArgs.#ctor(System.String,System.String,System.Byte[],FM.WebSync.ConnectionType,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.SubscribeReceiveArgs" /> class.
             </summary>
             <param name="channel">The channel over which data was received.</param>
             <param name="dataJson">The data in JSON format.</param>
             <param name="dataBytes">The data in binary format.</param>
             <param name="connectionType">The current connection type.</param>
             <param name="reconnectAfter">The amount of time in milliseconds to pause before reconnecting to the server.</param>
            </member>
        <member name="P:FM.WebSync.SubscribeReceiveArgs.Channel">
             <summary>
             Gets the channel over which the data was published.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeReceiveArgs.WasSentByMe">
             <summary>
             Gets whether the data was sent by the current client.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeReceiveArgs.PublishingClient">
             <summary>
             Gets or sets details about the client sending the publication.
             </summary>
            </member>
        <member name="T:FM.WebSync.SubscribeSuccessArgs">
             <summary>
             Arguments for subscribe success callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeSuccessArgs.Channel">
             <summary>
             Gets the channel to which the client was subscribed.
             Must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.SubscribeSuccessArgs.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeSuccessArgs.Channels">
             <summary>
             Gets the channels to which the client was subscribed.
             Each must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.SubscribeSuccessArgs.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeSuccessArgs.Tag">
             <summary>
             Gets the tag associated with the subscribe request.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribeSuccessArgs.IsResubscribe">
             <summary>
             Gets or sets whether the subscribe call was automatically
             invoked following a stream failure.
             </summary>
            </member>
        <member name="T:FM.WebSync.UnsubscribeSuccessArgs">
             <summary>
             Arguments for unsubscribe success callbacks.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeSuccessArgs.Channel">
             <summary>
             Gets the channel from which the client was unsubscribed.
             Must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.UnsubscribeSuccessArgs.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeSuccessArgs.Channels">
             <summary>
             Gets the channels from which the client was unsubscribed.
             Each must start with a forward slash (/).
             Overrides <see cref="P:FM.WebSync.UnsubscribeSuccessArgs.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeSuccessArgs.Tag">
             <summary>
             Gets the tag associated with the subscribe request.
             </summary>
            </member>
        <member name="P:FM.WebSync.UnsubscribeSuccessArgs.Forced">
             <summary>
             Gets whether this unsubscribe was forced due to a disconnect.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublisherPublishResponseArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Publisher.OnPublishResponse" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublisherPublishRequestArgs">
             <summary>
             Arguments for <see cref="E:FM.WebSync.Publisher.OnPublishRequest" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.BasePublisherEventArgs">
             <summary>
             Base arguments for <see cref="T:FM.WebSync.Publisher" />-triggered events.
             </summary>
            </member>
        <member name="P:FM.WebSync.BasePublisherEventArgs.Publisher">
             <summary>
             Gets or sets the <see cref="T:FM.WebSync.Publisher" /> triggering the event.
             </summary>
            </member>
        <member name="T:FM.WebSync.ConnectRetryMode">
             <summary>
             Various behaviour modes for handling connect retries.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectRetryMode.Aggressive">
             <summary>
             Indicates that the client should automatically
             retry after a connect failure, even if the failure
             originates from a custom server-side event.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectRetryMode.Intelligent">
             <summary>
             Indicates that the client should automatically
             retry after a connect failure, unless the failure
             originates from a custom server-side event.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectRetryMode.None">
             <summary>
             Indicates that the client should not automatically
             retry after a connect failure.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectRetryMode.Default">
             <summary>
             Same as <see cref="F:FM.WebSync.ConnectRetryMode.Intelligent" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.DeferredRetryConnectState">
             <summary>
             The state of a deferred retry call.
             </summary>
            </member>
        <member name="P:FM.WebSync.DeferredRetryConnectState.ConnectArgs">
             <summary>
             Gets or sets the client connect arguments.
             </summary>
            </member>
        <member name="P:FM.WebSync.DeferredRetryConnectState.BackoffTimeout">
             <summary>
             Gets or sets the backoff interval.
             </summary>
            </member>
        <member name="T:FM.WebSync.DeferredStreamState">
             <summary>
             The state of a deferred stream call.
             </summary>
            </member>
        <member name="P:FM.WebSync.DeferredStreamState.ConnectArgs">
             <summary>
             Gets or sets the client connect arguments.
             </summary>
            </member>
        <member name="P:FM.WebSync.DeferredStreamState.ReceivedMessages">
             <summary>
             Gets or sets whether the client received messages.
             </summary>
            </member>
        <member name="T:FM.WebSync.PublisherQueue">
             <summary>
             A thread-safe publisher queue that ensures synchronous
             delivery of publications from anywhere in your application
             while optimizing network resource consumption.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublisherQueue.Publisher">
             <summary>
             Gets the <see cref="T:FM.WebSync.Publisher" /> used by the queue.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublisherQueue.MaxBatchSize">
             <summary>
             Gets or sets the maximum number of publications that
             will be transferred to a server in one HTTP request.
             A MaxBatchSize of 0 or less will remove the maximum
             limit, and all queued publications will be sent every
             time. Defaults to 1000.
             </summary>
            </member>
        <member name="E:FM.WebSync.PublisherQueue.Published">
             <summary>
             Raised immediately after a Publish call has been made.
             </summary>
            </member>
        <member name="E:FM.WebSync.PublisherQueue.Exception">
             <summary>
             Raised when an exception is thrown while publishing.
             </summary>
            </member>
        <member name="M:FM.WebSync.PublisherQueue.#ctor(FM.WebSync.Publisher)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.PublisherQueue" /> class.
             </summary>
             <param name="publisher">The publisher to use for sending messages to the WebSync server.</param>
            </member>
        <member name="M:FM.WebSync.PublisherQueue.AddPublication(FM.WebSync.Publication)">
             <summary>
             Adds a publication to the queue.
             </summary>
             <param name="publication">The publication to add.</param>
            </member>
        <member name="M:FM.WebSync.PublisherQueue.Start">
             <summary>
             Starts the queue's internal thread.
             </summary>
            </member>
        <member name="M:FM.WebSync.PublisherQueue.Stop">
             <summary>
             Stops the queue's internal thread.
             </summary>
            </member>
        <member name="T:FM.WebSync.MessageTransferFactory">
             <summary>
             Creates implementations of <see cref="T:FM.WebSync.MessageTransfer" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.MessageTransferFactory.CreateHttpMessageTransfer">
             <summary>
             Gets or sets the callback that creates an HTTP-based message transfer class.
             </summary>
            </member>
        <member name="M:FM.WebSync.MessageTransferFactory.GetHttpMessageTransfer">
             <summary>
             Gets an instance of the HTTP-based message transfer class.
             </summary>
             <returns></returns>
            </member>
        <member name="P:FM.WebSync.MessageTransferFactory.CreateWebSocketMessageTransfer">
             <summary>
             Gets or sets the callback that creates a WebSocket-based message transfer class.
             </summary>
            </member>
        <member name="M:FM.WebSync.MessageTransferFactory.GetWebSocketMessageTransfer(System.String)">
             <summary>
             Gets an instance of the WebSocket-based message transfer class.
             </summary>
             <returns></returns>
            </member>
        <member name="T:FM.WebSync.ConcurrencyMode">
             <summary>
             Various behaviour modes for the streaming connection.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConcurrencyMode.Low">
             <summary>
             Indicates that the client will not be competing with
             many other clients within the same process.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConcurrencyMode.High">
             <summary>
             Indicates that the client will have to compete with
             hundreds or thousands of other clients within the same
             process for processor time.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConcurrencyMode.Default">
             <summary>
             Same as <see cref="F:FM.WebSync.ConcurrencyMode.Low" />.
             </summary>
            </member>
        <member name="T:FM.WebSync.HttpMessageTransfer">
             <summary>
             Defines methods for transferring messages using an instance of <see cref="T:FM.HttpWebRequestTransfer" />.
             </summary>
            </member>
        <member name="M:FM.WebSync.HttpMessageTransfer.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.HttpMessageTransfer" /> class.
             </summary>
            </member>
        <member name="M:FM.WebSync.HttpMessageTransfer.SendMessages(FM.WebSync.MessageRequestArgs)">
             <summary>
             Sends a request synchronously.
             </summary>
             <param name="requestArgs">The request parameters.</param>
             <returns>The response parameters.</returns>
            </member>
        <member name="M:FM.WebSync.HttpMessageTransfer.SendMessagesAsync(FM.WebSync.MessageRequestArgs,FM.SingleAction{FM.WebSync.MessageResponseArgs})">
             <summary>
             Sends a request asynchronously.
             </summary>
             <param name="requestArgs">The request parameters.</param>
             <param name="callback">The callback to execute with the resulting response.</param>
            </member>
        <member name="M:FM.WebSync.HttpMessageTransfer.Shutdown">
             <summary>
             Releases any resources and shuts down.
             </summary>
            </member>
        <member name="T:FM.WebSync.MessageTransfer">
             <summary>
             Base class that defines methods for transferring messages over HTTP.
             </summary>
            </member>
        <member name="M:FM.WebSync.MessageTransfer.Send(FM.WebSync.MessageRequestArgs)">
             <summary>
             Sends messages synchronously.
             </summary>
             <param name="requestArgs">The message parameters.</param>
             <returns>The resulting response.</returns>
            </member>
        <member name="M:FM.WebSync.MessageTransfer.SendAsync(FM.WebSync.MessageRequestArgs,FM.SingleAction{FM.WebSync.MessageResponseArgs})">
             <summary>
             Sends messages asynchronously.
             </summary>
             <param name="requestArgs">The message parameters.</param>
             <param name="callback">The callback to execute with the resulting response.</param>
            </member>
        <member name="M:FM.WebSync.MessageTransfer.SendMessages(FM.WebSync.MessageRequestArgs)">
             <summary>
             Sends a request synchronously.
             </summary>
             <param name="requestArgs">The request parameters.</param>
             <returns>The response parameters.</returns>
            </member>
        <member name="M:FM.WebSync.MessageTransfer.SendMessagesAsync(FM.WebSync.MessageRequestArgs,FM.SingleAction{FM.WebSync.MessageResponseArgs})">
             <summary>
             Sends a request asynchronously.
             </summary>
             <param name="requestArgs">The request parameters.</param>
             <param name="callback">The callback to execute with the response parameters.</param>
            </member>
        <member name="M:FM.WebSync.MessageTransfer.Shutdown">
             <summary>
             Releases any resources and shuts down.
             </summary>
            </member>
        <member name="M:FM.WebSync.MessageTransfer.MessageRequestArgsToHttpRequestArgs(FM.WebSync.MessageRequestArgs)">
             <summary>
             Converts a <see cref="T:FM.WebSync.MessageRequestArgs" /> to an <see cref="T:FM.HttpRequestArgs" />.
             </summary>
             <param name="requestArgs">The request arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.MessageTransfer.HttpResponseArgsToMessageResponseArgs(FM.HttpResponseArgs)">
             <summary>
             Converts an <see cref="T:FM.HttpResponseArgs" /> to a <see cref="T:FM.WebSync.MessageRequestArgs" />.
             </summary>
             <param name="httpResponseArgs">The HTTP response arguments.</param>
             <returns></returns>
            </member>
        <member name="T:FM.WebSync.NotifyingClient">
             <summary>
             Details about the client sending the notification data.
             </summary>
            </member>
        <member name="M:FM.WebSync.NotifyingClient.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.NotifyingClient" /> class.
             </summary>
            </member>
        <member name="M:FM.WebSync.NotifyingClient.#ctor(System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,FM.WebSync.Record})">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.NotifyingClient" /> class.
             </summary>
             <param name="clientId">The notifying client's ID.</param>
             <param name="boundRecords">The records bound to the client.</param>
            </member>
        <member name="P:FM.WebSync.NotifyingClient.ClientId">
             <summary>
             Gets or sets the notifying client's ID.
             </summary>
            </member>
        <member name="P:FM.WebSync.NotifyingClient.BoundRecords">
             <summary>
             Gets or sets the notifying client's bound records.
             </summary>
            </member>
        <member name="M:FM.WebSync.NotifyingClient.GetBoundRecordValueJson(System.String)">
             <summary>
             Gets the JSON value of a record bound to the notifying client.
             </summary>
             <param name="key">The record key.</param>
             <returns>The JSON value of the record, if it exists, or <c>null</c>.</returns>
            </member>
        <member name="M:FM.WebSync.NotifyingClient.ToJson">
             <summary>
             Serializes this instance to JSON.
             </summary>
             <returns>The JSON-formatted notifying client.</returns>
            </member>
        <member name="M:FM.WebSync.NotifyingClient.ToJson(FM.WebSync.NotifyingClient)">
             <summary>
             Serializes a notifying client to JSON.
             </summary>
             <param name="notifyingClient">The notifying client to serialize.</param>
             <returns>The JSON-formatted notifying client.</returns>
            </member>
        <member name="M:FM.WebSync.NotifyingClient.FromJson(System.String)">
             <summary>
             Deserializes a JSON-formatted notifying client.
             </summary>
             <param name="notifyingClientJson">The JSON-formatted notifying client to deserialize.</param>
             <returns>The notifying client.</returns>
            </member>
        <member name="T:FM.WebSync.Notification">
             <summary>
             The WebSync notification used for direct notifying.
             </summary>
            </member>
        <member name="M:FM.WebSync.Notification.#ctor">
             <summary>
             Creates a new notification.
             </summary>
            </member>
        <member name="M:FM.WebSync.Notification.#ctor(System.Guid)">
             <summary>
             Creates a new notification with a client ID.
             </summary>
             <param name="clientId">The client ID to target.</param>
            </member>
        <member name="M:FM.WebSync.Notification.#ctor(System.Guid,System.String)">
             <summary>
             Creates a new notification with a client ID and JSON data.
             </summary>
             <param name="clientId">The client ID to target.</param>
             <param name="dataJson">The data to send (in JSON format).</param>
            </member>
        <member name="M:FM.WebSync.Notification.#ctor(System.Guid,System.Byte[])">
             <summary>
             Creates a new notification with a client ID and JSON data.
             </summary>
             <param name="clientId">The client ID to target.</param>
             <param name="dataBytes">The data to send (in binary format).</param>
            </member>
        <member name="M:FM.WebSync.Notification.#ctor(System.Guid,System.String,System.String)">
             <summary>
             Creates a new notification with a client ID and JSON data.
             </summary>
             <param name="clientId">The client ID to target.</param>
             <param name="dataJson">The data to send (in JSON format).</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="M:FM.WebSync.Notification.#ctor(System.Guid,System.Byte[],System.String)">
             <summary>
             Creates a new notification with a client ID and JSON data.
             </summary>
             <param name="clientId">The client ID to target.</param>
             <param name="dataBytes">The data to send (in binary format).</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="P:FM.WebSync.Notification.ClientId">
             <summary>
             Gets or sets the client ID the publisher is targeting.
             </summary>
            </member>
        <member name="P:FM.WebSync.Notification.Tag">
             <summary>
             Gets or sets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="M:FM.WebSync.Notification.ToJson">
             <summary>
             Serializes the notification to JSON.
             </summary>
             <returns>The notification in JSON-serialized format.</returns>
            </member>
        <member name="M:FM.WebSync.Notification.ToJson(FM.WebSync.Notification)">
             <summary>
             Serializes a notification to JSON.
             </summary>
             <param name="notification">A notification to serialize.</param>
             <returns>A JSON-serialized notification.</returns>
            </member>
        <member name="M:FM.WebSync.Notification.FromJson(System.String)">
             <summary>
             Deserializes a notification from JSON.
             </summary>
             <param name="notificationJson">A JSON string to deserialize.</param>
             <returns>A deserialized notification.</returns>
            </member>
        <member name="M:FM.WebSync.Notification.ToJsonMultiple(FM.WebSync.Notification[])">
             <summary>
             Serializes a list of notifications to JSON.
             </summary>
             <param name="notifications">A list of notifications to serialize.</param>
             <returns>A JSON-serialized array of notifications.</returns>
            </member>
        <member name="M:FM.WebSync.Notification.FromJsonMultiple(System.String)">
             <summary>
             Deserializes a list of notifications from JSON.
             </summary>
             <param name="notificationsJson">A JSON string to deserialize.</param>
             <returns>A deserialized list of notifications.</returns>
            </member>
        <member name="M:FM.WebSync.Notification.ToMessage(FM.WebSync.Notification)">
             <summary>
             Converts a Notification to its Message format.
             </summary>
             <param name="notification">The notification.</param>
             <returns>The message.</returns>
            </member>
        <member name="M:FM.WebSync.Notification.FromMessage(FM.WebSync.Message)">
             <summary>
             Converts a Notification from its Message format.
             </summary>
             <param name="message">The message.</param>
             <returns>The notification.</returns>
            </member>
        <member name="M:FM.WebSync.Notification.ToMessages(FM.WebSync.Notification[])">
             <summary>
             Converts a set of Notifications to their Message formats.
             </summary>
             <param name="notifications">The notifications.</param>
             <returns>The messages.</returns>
            </member>
        <member name="M:FM.WebSync.Notification.FromMessages(FM.WebSync.Message[])">
             <summary>
             Converts a set of Notifications from their Message formats.
             </summary>
             <param name="messages">The messages.</param>
             <returns>The notifications.</returns>
            </member>
        <member name="T:FM.WebSync.PublisherResponseArgs">
             <summary>
             The internal representation of data received in response to a publisher request.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublisherResponseArgs.Response">
             <summary>
             Gets or sets the first response received from the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublisherResponseArgs.Responses">
             <summary>
             Gets or sets the responses received from the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublisherResponseArgs.Exception">
             <summary>
             Gets or sets the exception generated by the request.
             </summary>
            </member>
        <member name="T:FM.WebSync.BaseClient">
             <summary>
             Base class for WebSync clients and publishers.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClient.RequestUrl">
             <summary>
             Gets or sets the absolute URL of the WebSync request handler, typically
             ending with websync.ashx.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClient.RequestTimeout">
             <summary>
             Gets or sets the number of milliseconds to wait for a standard request to
             return a response before it is aborted and another request is attempted.
             Defaults to 15000 (15 seconds).
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClient.DomainKey">
             <summary>
             Gets or sets the domain key for sandboxing connections to the server.
             Defaults to "11111111-1111-1111-1111-111111111111". If you are using
             WebSync On-Demand, this should be set to the private domain key if you
             are attempting to use methods that have been secured in the Portal;
             otherwise, use the public domain key.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClient.DomainKeyString">
             <summary>
             Gets or sets the <see cref="P:FM.WebSync.BaseClient.DomainKey" />
             as a string value.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClient.DomainName">
             <summary>
             Gets or sets the domain name to send as the <tt>Referrer</tt> with each request.
             Defaults to "localhost". If you are using WebSync On-Demand, this field is only
             necessary if you are using the public domain key, in which case it should be set
             to equal the domain name entered in the Portal for the domain key (e.g.
             "frozenmountain.com").
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClient.DisableBinary">
             <summary>
             Gets or sets whether to disable the transmission of binary payloads
             as binary on the wire. If set to <c>true</c>, binary payloads will
             be sent over the wire as base64-encoded strings.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseClient.ConcurrencyMode">
             <summary>
             Gets or sets a flag indicating the level of concurrency in the current process.
             The intended use of this property is to lighten the processor load when hundreds
             or thousands of instances are created in a single process for the purposes of
             generating load for testing.
             </summary>
            </member>
        <member name="E:FM.WebSync.BaseClient.OnUnhandledException">
             <summary>
             Raised when an exception is thrown in user code and not handled,
             typically in a callback or event handler.
             </summary>
            </member>
        <member name="E:FM.WebSync.BaseClient.OnRequestCreated">
             <summary>
             Raised whenever a new request is created
             and about to be transferred to the server. This is a good place to read
             or modify outgoing messages.
             </summary>
            </member>
        <member name="E:FM.WebSync.BaseClient.OnResponseReceived">
             <summary>
             Raised whenever a new response is received
             and about to be processed by the client. This is a good place to read
             or modify incoming messages.
             </summary>
            </member>
        <member name="E:FM.WebSync.BaseClient.OnHttpRequestCreated">
             <summary>
             Raised whenever an underlying HTTP request
             has been created and is about to be transferred to the server. This is a
             good place to add headers/cookies. For WebSocket streams, this will fire
             only once for the initial HTTP-based handshake.
             </summary>
            </member>
        <member name="E:FM.WebSync.BaseClient.OnHttpResponseReceived">
             <summary>
             Raised whenever an underlying HTTP response
             has been received and is about to be processed by the client. This is a
             good place to read headers/cookies. For WebSocket streams, this will fire
             only once for the initial HTTP-based handshake.
             </summary>
            </member>
        <member name="M:FM.WebSync.BaseClient.InternalOnRequestCreated(FM.WebSync.MessageRequestCreatedArgs)">
             <summary>
             Wrapper for the <see cref="E:FM.WebSync.BaseClient.OnRequestCreated" /> event.
             </summary>
             <param name="e">The event args.</param>
            </member>
        <member name="M:FM.WebSync.BaseClient.InternalOnResponseReceived(FM.WebSync.MessageResponseReceivedArgs)">
             <summary>
             Wrapper for the <see cref="E:FM.WebSync.BaseClient.OnResponseReceived" /> event.
             </summary>
             <param name="e">The event args.</param>
            </member>
        <member name="M:FM.WebSync.BaseClient.InternalOnHttpRequestCreated(FM.HttpRequestCreatedArgs)">
             <summary>
             Wrapper for the <see cref="E:FM.WebSync.BaseClient.OnHttpRequestCreated" /> event.
             </summary>
             <param name="e">The event args.</param>
            </member>
        <member name="M:FM.WebSync.BaseClient.InternalOnHttpResponseReceived(FM.HttpResponseReceivedArgs)">
             <summary>
             Wrapper for the <see cref="E:FM.WebSync.BaseClient.OnHttpResponseReceived" /> event.
             </summary>
             <param name="e">The event args.</param>
            </member>
        <member name="F:FM.WebSync.BaseClient.InvalidResponseMessage">
             <summary>
             The default message for an invalid server response.
             </summary>
            </member>
        <member name="M:FM.WebSync.BaseClient.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.BaseClient" /> class.
             </summary>
            </member>
        <member name="M:FM.WebSync.BaseClient.CreateHeaders">
             <summary>
             Creates an initial set of headers, including
             the domain key and domain name.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.BaseClient.SanitizeDomainName(System.String)">
             <summary>
             Takes a domain name and ensures it starts with http:// or https://.
             </summary>
             <param name="domainName">The domain name to sanitize.</param>
             <returns>The sanitized domain name.</returns>
            </member>
        <member name="M:FM.WebSync.BaseClient.RaiseUnhandledException(System.Exception)">
             <summary>
             Raises an unhandled exception.
             </summary>
             <param name="exception">The unhandled exception.</param>
             <returns><c>true</c> if the exception was handled; otherwise, <c>false</c>.</returns>
            </member>
        <member name="T:FM.WebSync.Advice">
             <summary>
             Advice class used in <see cref="T:FM.WebSync.Message">Messages</see>.
             </summary>
            </member>
        <member name="P:FM.WebSync.Advice.WebSocket">
             <summary>
             Gets or sets advice specific to WebSocket clients.
             </summary>
            </member>
        <member name="P:FM.WebSync.Advice.LongPolling">
             <summary>
             Gets or sets advice specific to long-polling clients.
             </summary>
            </member>
        <member name="P:FM.WebSync.Advice.CallbackPolling">
             <summary>
             Gets or sets advice specific to callback-polling clients.
             </summary>
            </member>
        <member name="M:FM.WebSync.Advice.ToJson">
             <summary>
             Serializes the advice object to JSON.
             </summary>
             <returns>The serialized advice object.</returns>
            </member>
        <member name="M:FM.WebSync.Advice.ToJson(FM.WebSync.Advice)">
             <summary>
             Serializes a single advice object to JSON.
             </summary>
             <param name="advice">The advice object to serialize.</param>
             <returns>The serialized advice object.</returns>
            </member>
        <member name="M:FM.WebSync.Advice.FromJson(System.String)">
             <summary>
             Deserializes a single advice object from JSON.
             </summary>
             <param name="adviceJson">The JSON advice object to deserialize.</param>
             <returns>The deserialized advice object.</returns>
            </member>
        <member name="T:FM.WebSync.BaseAdvice">
             <summary>
             Base advice class used in <see cref="T:FM.WebSync.Message">Messages</see> and for nested advice.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseAdvice.Reconnect">
             <summary>
             Gets or sets how the client should attempt to re-establish a connection with the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseAdvice.Interval">
             <summary>
             Gets or sets the interval to wait before following the reconnect advice.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseAdvice.Hosts">
             <summary>
             Gets or sets the list of host names that may be used as alternate servers.
             </summary>
            </member>
        <member name="M:FM.WebSync.BaseAdvice.ToJson">
             <summary>
             Serializes the base advice object to JSON.
             </summary>
             <returns>The serialized advice object.</returns>
            </member>
        <member name="M:FM.WebSync.BaseAdvice.ToJson(FM.WebSync.BaseAdvice)">
             <summary>
             Serializes a single base advice object to JSON.
             </summary>
             <param name="baseAdvice">The base advice object to serialize.</param>
             <returns>The serialized advice object.</returns>
            </member>
        <member name="M:FM.WebSync.BaseAdvice.FromJson(System.String)">
             <summary>
             Deserializes a single base advice object from JSON.
             </summary>
             <param name="baseAdviceJson">The JSON base advice object to deserialize.</param>
             <returns>The deserialized advice object.</returns>
            </member>
        <member name="T:FM.WebSync.BaseMessage">
             <summary>
             Base class for WebSync client/publisher messages.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseMessage.Validate">
             <summary>
             Gets or sets whether to skip validation while deserializing, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseMessage.Successful">
             <summary>
             Gets or sets the flag that indicates whether the request should be
             processed. If the message represents a response, this indicates whether the
             processing was successful. If set to <c>false</c>, the <see cref="P:FM.WebSync.BaseMessage.Error" />
             property should be set to a friendly error message.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseMessage.Error">
             <summary>
             Gets or sets the friendly error message if <see cref="P:FM.WebSync.BaseMessage.Successful" /> is
             <c>false</c>.
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseMessage.Timestamp">
             <summary>
             Gets or sets the date/time the message was processed on the server (in UTC/GMT).
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseMessage.DataJson">
             <summary>
             Gets or sets the data payload
             in JSON format. (Overrides <see cref="P:FM.WebSync.BaseMessage.DataBytes" />.)
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseMessage.DataBytes">
             <summary>
             Gets or sets the data payload
             in binary format. (Overrides <see cref="P:FM.WebSync.BaseMessage.DataJson" />.)
             </summary>
            </member>
        <member name="P:FM.WebSync.BaseMessage.IsBinary">
             <summary>
             Gets whether or not the data is binary.
             </summary>
            </member>
        <member name="M:FM.WebSync.BaseMessage.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.BaseMessage" /> class.
             </summary>
            </member>
        <member name="T:FM.WebSync.MetaChannels">
             <summary>
             Contains the reserved Bayeux meta-channels and methods to assist in detecting them.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.MetaPrefix">
             <summary>
             The reserved prefix for Bayeux meta-channels.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.ServicePrefix">
             <summary>
             The reserved prefix for Bayeux service-channels.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.Handshake">
             <summary>
             The reserved channel for handshake requests/responses.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.Connect">
             <summary>
             The reserved channel for connect requests/responses.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.Disconnect">
             <summary>
             The reserved channel for disconnect requests/responses.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.Bind">
             <summary>
             The reserved channel for bind requests/responses.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.Unbind">
             <summary>
             The reserved channel for unbind requests/responses.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.Subscribe">
             <summary>
             The reserved channel for subscribe requests/responses.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.Unsubscribe">
             <summary>
             The reserved channel for unsubscribe requests/responses.
             </summary>
            </member>
        <member name="F:FM.WebSync.MetaChannels.Notify">
             <summary>
             The reserved channel for notify requests/responses.
             </summary>
            </member>
        <member name="M:FM.WebSync.MetaChannels.IsReservedChannel(System.String)">
             <summary>
             Determines whether the specified channel name is a reserved Bayeux channel.
             </summary>
             <param name="channel">The channel name to check.</param>
             <returns>
             	<c>true</c> if the specified channel name is reserved; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:FM.WebSync.MetaChannels.IsMetaChannel(System.String)">
             <summary>
             Determines whether the specified channel name is a reserved Bayeux /meta channel.
             </summary>
             <param name="channel">The channel name to check.</param>
             <returns>
             	<c>true</c> if the specified channel name is a reserved Bayeux /meta channel; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:FM.WebSync.MetaChannels.IsServiceChannel(System.String)">
             <summary>
             Determines whether the specified channel name is a reserved Bayeux /service channel.
             </summary>
             <param name="channel">The channel name to check.</param>
             <returns>
             	<c>true</c> if the specified channel name is a reserved Bayeux /service channel; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:FM.WebSync.MetaChannels.ConvertChannelToServiced(System.String)">
             <summary>
             Converts a channel into its serviced equivalent.
             </summary>
             <param name="channel">The channel to convert.</param>
             <returns>The channel with the service prefix.</returns>
            </member>
        <member name="M:FM.WebSync.MetaChannels.ConvertChannelFromServiced(System.String)">
             <summary>
             Converts a serviced channel into its original form.
             </summary>
             <param name="channel">The channel to convert.</param>
             <returns>The channel without the service prefix.</returns>
            </member>
        <member name="M:FM.WebSync.MetaChannels.GetMessageType(System.String)">
             <summary>
             Gets the type of the message.
             </summary>
             <param name="bayeuxChannel">The bayeux channel.</param>
             <returns>The type of the message.</returns>
            </member>
        <member name="T:FM.WebSync.Reconnect">
             <summary>
             Allowed reconnect advice values for <see cref="T:FM.WebSync.Message"> Messages</see>.
             </summary>
            </member>
        <member name="F:FM.WebSync.Reconnect.Retry">
             <summary>
             Indicates that the client should retry its last request.
             </summary>
            </member>
        <member name="F:FM.WebSync.Reconnect.Handshake">
             <summary>
             Indicates that the client should attempt to handshake.
             </summary>
            </member>
        <member name="F:FM.WebSync.Reconnect.None">
             <summary>
             Indicates that the client should not attempt to reconnect.
             </summary>
            </member>
        <member name="T:FM.WebSync.ConnectionType">
             <summary>
             Allowed connection type values for <see cref="T:FM.WebSync.Message">Messages</see>.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectionType.WebSocket">
             <summary>
             Indicates that the WebSocket connection type is supported.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectionType.LongPolling">
             <summary>
             Indicates that the long-polling connection type is supported.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectionType.CallbackPolling">
             <summary>
             Indicates that the callback-polling connection type is supported.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectionType.IFrame">
             <summary>
             (Unsupported) Indicates that the iframe connection type is supported.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectionType.Flash">
             <summary>
             (Unsupported) Indicates that the flash connection type is supported.
             </summary>
            </member>
        <member name="F:FM.WebSync.ConnectionType.Unknown">
             <summary>
             Indicates that the connection type was not recognized.
             </summary>
            </member>
        <member name="T:FM.WebSync.Client">
             <summary>
             <para>
             The WebSync client, used for subscribing to channels and receiving data, as well as
             publishing data to specific channels.
             </para>
             </summary>
             <remarks>
             <para>
             The WebSync client has 9 primary operations:
             </para>
             <list type="number">
                 <item>
                     Connect/Disconnect: Sets up/takes down a streaming connection to the server.
                 </item>
                 <item>
                     Bind/Unbind: Attaches/detaches records to the client (e.g. display name, user ID).
                 </item>
                 <item>
                     Subscribe/Unsubscribe: Opts in/out of receiving data published to a channel.
                 </item>
                 <item>
                     Publish: Broadcasts data to any clients subscribed to the channel.
                 </item>
                 <item>
                     Notify: Pushes data directly to a specific client (no subscription necessary).
                 </item>
                 <item>
                     Service: Sends data to the server for traditional request/response processing.
                 </item>
             </list>
             <para>
             Each method (and the constructor) take a single "args" object. This object defines
             callback functions, configuration settings, and error handling information. It
             allows the client to default to sensible values while allowing easy overrides. 
             </para>
             <para>
             The WebSync client is designed to be as robust and fault-tolerant as possible. If
             there are any failures in the streaming connection, the client will automatically
             reconnect and set up a new one.
             </para>
             <para>
             Maintaining a streaming connection lies at the heart of WebSync, and so special care
             is given to ensure that a streaming connection remains active, even in the presence
             of total network failure.
             </para>
             <para>
             Since WebSync clients often subscribe to channels to receive partial updates, it is
             highly recommended to do initial state load in the OnSuccess callback of the call
             to Subscribe. This way, (a) there are no missed
             partial updates between the state load and the subscription, and (b) in the event of
             connection failure and automatic reconnection/resubscription, the state will be
             automatically refreshed.
             </para>
             <para>
             When a connection is lost, <see cref="T:FM.WebSync.ConnectArgs" />.OnStreamFailure will be called.
             This is an excellent time to update the UI to let your user know that the connection
             is temporarily offline and a new one is being established. The client will
             automatically re-attempt a connect.
             </para>
             <para>
             Shortly afterwards, either <see cref="T:FM.WebSync.ConnectArgs" />.OnSuccess or
             <see cref="T:FM.WebSync.ConnectArgs" />.OnFailure will be called, depending on whether or not
             the client could successfully negotiate a new connection with the server.
             If <see cref="T:FM.WebSync.ConnectArgs" />.OnSuccess is called, the connection is officially
             re-established. If <see cref="T:FM.WebSync.ConnectArgs" />.OnFailure is called, you should
             analyze the response, and if appropriate, set <see cref="P:FM.WebSync.BaseFailureArgs.Retry" />
             to true or false, depending on whether you want to retry the connection. The default
             value of <see cref="P:FM.WebSync.BaseFailureArgs.Retry" /> is governed by <see cref="T:FM.WebSync.ConnectArgs" />.RetryMode.
             Custom backoff algorithms can be defined using <see cref="T:FM.WebSync.ConnectArgs" />.RetryBackoff.
             </para>
             <para>
             By the time <see cref="T:FM.WebSync.ConnectArgs" />.OnSuccess is called, the client has a new
             client ID. Any pre-existing subscriptions or bindings performed outside the
             connect callback chain will be automatically recreated.
             </para>
             <para>
             Within a given OnSuccess or OnFailure callback, a boolean flag is always present to
             indicate whether the callback is being executed as part of an automatic reconnect.
             Refer to <see cref="P:FM.WebSync.ConnectSuccessArgs.IsReconnect" />,
             <see cref="P:FM.WebSync.ConnectFailureArgs.IsReconnect" />,
             <see cref="P:FM.WebSync.SubscribeSuccessArgs.IsResubscribe" />,
             <see cref="P:FM.WebSync.SubscribeFailureArgs.IsResubscribe" />,
             <see cref="P:FM.WebSync.BindSuccessArgs.IsRebind" />, and
             <see cref="P:FM.WebSync.BindFailureArgs.IsRebind" />.
             </para>
             <example>
             <para>
             Here's a simple example of how to create a WebSync client in C#, subscribe to a channel,
             and publish a message to that channel.
             </para>
             <code>
             using System;
             using System.Runtime.Serialization;
             using FM;
             using FM.WebSync;
             
             namespace Sample
             {
                 class Program
                 {
                     [DataContract]
                     private class Payload
                     {
                         [DataMember(Name = "message")]
                         public string Message { get; set; }
                         
                         public Payload(string message)
                         {
                             Message = message;
                         }
                     }
             
                     static void Main(string[] args)
                     {
                         Client client = new Client("http://localhost/websync.ashx");
                         
                         // connect
                         client.Connect(new ConnectArgs
                         {
                             OnSuccess = (e) =&gt;
                             {
                                 Console.WriteLine("Connected.");
                             },
                             OnFailure = (e) =&gt;
                             {
                                 Console.WriteLine("Could not connect.");
                                 Console.WriteLine(e.Exception.Message);
                             },
                             OnStreamFailure = (e) =&gt;
                             {
                                 Console.WriteLine("Stream failure, reconnecting...");
                                 Console.WriteLine(e.Exception.Message);
                             }
                         });
                         
                         // subscribe
                         var channel = "/test";
                         client.Subscribe(new SubscribeArgs(channel)
                         {
                             OnSuccess = (e) =&gt;
                             {
                                 Console.WriteLine("Subscribed.");
                             },
                             OnFailure = (e) =&gt;
                             {
                                 Console.WriteLine("Could not subscribe.");
                                 Console.WriteLine(e.Exception.Message);
                             },
                             OnReceive = (e) =&gt;
                             {
                                 var payload = Json.Deserialize&lt;Payload&gt;(e.DataJson);
                                 Console.WriteLine("Received data!");
                                 Console.WriteLine(payload.Message);
                             }
                         });
                         
                         // publish
                         var payloadJson = Json.Serialize(new Payload("Hello, this is .NET Client."));
                         client.Publish(new PublishArgs(channel, payloadJson)
                         {
                             OnSuccess = (e) =&gt;
                             {
                                 Console.WriteLine("Published.");
                             },
                             OnFailure = (e) =&gt;
                             {
                                 Console.WriteLine("Could not publish.");
                                 Console.WriteLine(e.Exception.Message);
                             }
                         });
                     }
                 }
             }
             </code>
             <para>
             For those uncomfortable with the lambda-style creation of methods, this can easily
             be written in the old style of C# as well. Here's just a partial sample:
             </para>
             <code>
             static void Main(string[] args)
             {
                 Client client = new Client("http://localhost/websync.ashx");
             
                 ConnectArgs connectArgs = new ConnectArgs();
                 connectArgs.OnSuccess = OnSuccess;
                 connectArgs.OnFailure = OnFailure;
                 client.Connect(connectArgs);
             }
             
             static void OnSuccess(ConnectSuccessArgs args)
             {
                 Console.WriteLine("Connected with ID " + args.ClientId + ".");
             }
             
             static void OnFailure(ConnectFailureArgs args)
             {
                 Console.WriteLine("Could not connect. " + args.Exception.Message);
             }
             </code>
             </example>
             </remarks>
            </member>
        <member name="P:FM.WebSync.Client.ClientId">
             <summary>
             Gets or sets the server-generated WebSync client ID. This value is only set if the client is
             connected, so reference it only after successfully connecting the client.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.SessionId">
             <summary>
             Gets or sets the server-generated WebSync session ID. This value is only set if the client is
             connected.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.InstanceId">
             <summary>
             Gets or sets a locally-generated instance ID. This value is set immediately upon construction,
             is local-only, and does not change for the duration of this client instance, unless overriden
             by application code.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.ServerTimeout">
             <summary>
             Gets or sets the number of milliseconds before the server takes action to discover
             if this client is idling or still active.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.IsConnected">
             <summary>
             Gets or sets whether the client is currently connected.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.IsConnecting">
             <summary>
             Gets or sets whether the client is currently connecting.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.IsDisconnecting">
             <summary>
             Gets or sets whether the client is currently disconnecting.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.StreamRequestUrl">
             <summary>
             Gets or sets the absolute URL of the WebSync request handler for streaming connections, typically
             ending with websync.ashx.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.Synchronous">
             <summary>
             Gets or sets whether or not to execute client methods synchronously. This approach is not
             recommended for UI threads, as it will block until the request completes.
             Defaults to <c>false</c>.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.Token">
             <summary>
             Gets or sets the token sent with each request for load balancing purposes.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.StreamRequestTimeout">
             <summary>
             Gets the number of milliseconds to wait for a stream request to
             return a response before it is aborted and another stream request is attempted.
             </summary>
            </member>
        <member name="P:FM.WebSync.Client.DisableWebSockets">
             <summary>
             Gets or sets whether to disable WebSocket protocol support and use long-polling,
             even if the server is capable of accepting WebSocket requests.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnNotify">
             <summary>
             Raised whenever a notification is sent to this client.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnServerBind">
             <summary>
             Raised whenever the server binds
             the client to a record or set of records.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnServerUnbind">
             <summary>
             Raised whenever the server unbinds
             the client from a record or set of records.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnServerSubscribe">
             <summary>
             Raised whenever the server subscribes
             the client to a channel or set of channels.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnServerUnsubscribe">
             <summary>
             Raised whenever the server unsubscribes
             the client from a channel or set of channels.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnConnectSuccess">
             <summary>
             Raised whenever a client successfully connects.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnConnectFailure">
             <summary>
             Raised whenever a client fails to connect.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnConnectComplete">
             <summary>
             Raised whenever a client completes a connect, successfully or not.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnSubscribeSuccess">
             <summary>
             Raised whenever a client successfully subscribes.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnSubscribeFailure">
             <summary>
             Raised whenever a client fails to subscribe.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnSubscribeComplete">
             <summary>
             Raised whenever a client completes a subscribe, successfully or not.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnBindSuccess">
             <summary>
             Raised whenever a client successfully binds.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnBindFailure">
             <summary>
             Raised whenever a client fails to bind.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnBindComplete">
             <summary>
             Raised whenever a client completes a bind, successfully or not.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnUnsubscribeSuccess">
             <summary>
             Raised whenever a client successfully unsubscribes.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnUnsubscribeFailure">
             <summary>
             Raised whenever a client fails to unsubscribe.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnUnsubscribeComplete">
             <summary>
             Raised whenever a client completes an unsubscribe, successfully or not.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnUnbindSuccess">
             <summary>
             Raised whenever a client successfully unbinds.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnUnbindFailure">
             <summary>
             Raised whenever a client fails to unbind.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnUnbindComplete">
             <summary>
             Raised whenever a client completes an unbind, successfully or not.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnDisconnectComplete">
             <summary>
             Raised whenever a client completes a disconnect.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnPublishSuccess">
             <summary>
             Raised whenever a client successfully publishes.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnPublishFailure">
             <summary>
             Raised whenever a client fails to publish.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnPublishComplete">
             <summary>
             Raised whenever a client completes a publish, successfully or not.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnNotifySuccess">
             <summary>
             Raised whenever a client successfully notifies.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnNotifyFailure">
             <summary>
             Raised whenever a client fails to notify.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnNotifyComplete">
             <summary>
             Raised whenever a client completes a notify, successfully or not.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnServiceSuccess">
             <summary>
             Raised whenever a client successfully services.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnServiceFailure">
             <summary>
             Raised whenever a client fails to service.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnServiceComplete">
             <summary>
             Raised whenever a client completes a service, successfully or not.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnStreamFailure">
             <summary>
             Raised whenever the client's streaming connection breaks down.
             </summary>
            </member>
        <member name="E:FM.WebSync.Client.OnStateRestored">
             <summary>
             Raised whenever the client's state is restored after a reconnection.
             </summary>
            </member>
        <member name="M:FM.WebSync.Client.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Client" /> class.
             </summary>
             <param name="requestUrl">The absolute URL of the WebSync server request handler.</param>
            </member>
        <member name="M:FM.WebSync.Client.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Client" /> class.
             </summary>
             <param name="requestUrl">The absolute URL of the WebSync server request handler for non-streaming requests.</param>
             <param name="streamRequestUrl">The absolute URL of the WebSync server request handler for streaming requests.</param>
            </member>
        <member name="M:FM.WebSync.Client.GenerateToken">
             <summary>
             Generates a new token based on the current date/time.
             </summary>
             <returns>The generated token.</returns>
            </member>
        <member name="E:FM.WebSync.Client.OnConnectRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> connect request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientConnectRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnConnectResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> connect response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientConnectResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnConnectEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> connect ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientConnectEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnDisconnectRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> disconnect request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientDisconnectRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnDisconnectResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> disconnect response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientDisconnectResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnDisconnectEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> disconnect ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientDisconnectEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnBindRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> bind request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientBindRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnBindResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> bind response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientBindResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnBindEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> bind ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientBindEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnUnbindRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> unbind request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientUnbindRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnUnbindResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> unbind response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientUnbindResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnUnbindEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> unbind ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientUnbindEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnSubscribeRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> subscribe request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientSubscribeRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnSubscribeResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> subscribe response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientSubscribeResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnSubscribeEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> subscribe ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientSubscribeEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnUnsubscribeRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> unsubscribe request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientUnsubscribeRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnUnsubscribeResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> unsubscribe response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientUnsubscribeResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnUnsubscribeEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> unsubscribe ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientUnsubscribeEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnPublishRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> publish request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientPublishRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnPublishResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> publish response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientPublishResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnPublishEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> publish ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientPublishEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnNotifyRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> notify request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientNotifyRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnNotifyResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> notify response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientNotifyResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnNotifyEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> notify ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientNotifyEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnServiceRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Client" /> service request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientServiceRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnServiceResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> service response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientServiceResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Client.OnServiceEnd">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Client" /> service ends. This event is
             designed to support extensions by allowing modifications to be applied
             to the client after processing.
             </summary>
             <parameter name="source">The client that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.ClientServiceEndArgs" /> associated with the event.</parameter>
            </member>
        <member name="M:FM.WebSync.Client.SetCustomOnReceive(System.String,FM.SingleAction{FM.WebSync.SubscribeReceiveArgs})">
             <summary>
             Sets a callback to be invoked whenever messages are received on the specified
             channel.
             </summary>
             <remarks>
             <para>
             This method does <b>not</b> subscribe you to a channel. Rather, it caches a
             callback to be executed when messages are received on a particular
             channel.
             </para>
             </remarks>
             <param name="channel">The channel over which the messages will be received.</param>
             <param name="onReceive">The callback to invoke when a message is received.</param>
            </member>
        <member name="M:FM.WebSync.Client.SetCustomOnReceiveWithTag(System.String,System.String,FM.SingleAction{FM.WebSync.SubscribeReceiveArgs})">
             <summary>
             Sets a callback to be invoked whenever messages are received on the specified
             channel. The tag allows multiple callbacks to be registered for
             the same channel.
             </summary>
             <remarks>
             <para>
             This method does <b>not</b> subscribe you to a channel. Rather, it caches a
             callback to be executed when messages are received on a particular
             channel.
             </para>
             </remarks>
             <param name="channel">The channel over which the messages will be received.</param>
             <param name="tag">The identifier for this callback.</param>
             <param name="onReceive">The callback to invoke when a message is received.</param>
            </member>
        <member name="M:FM.WebSync.Client.GetCustomOnReceive(System.String)">
             <summary>
             Gets the callback invoked whenever messages are received on the specified
             channel.
             </summary>
             <param name="channel">The channel over which the messages are being received.</param>
             <returns>The callback invoked when a message is received, if a callback
             is set; otherwise <c>null</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Client.GetCustomOnReceiveWithTag(System.String,System.String)">
             <summary>
             Gets the callback invoked whenever messages are received on the specified
             channel.  The tag denotes a specific callback.
             </summary>
             <param name="channel">The channel over which the messages are being received.</param>
             <param name="tag">The identifier for the callback.</param>
             <returns>The callback invoked when a message is received, if a callback
             is set; otherwise <c>null</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Client.UnsetCustomOnReceive(System.String)">
             <summary>
             Unsets a callback invoked whenever messages are received on the specified
             channel.
             </summary>
             <remarks>
             <para>
             This method does <b>not</b> unsubscribe you from a channel. Rather, it stop the
             callback from executing when messages are received on a particular
             channel.
             </para>
             </remarks>
             <param name="channel">The channel over which the messages are being received.</param>
             <returns><c>true</c> if the callback was previously set; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Client.UnsetCustomOnReceiveWithTag(System.String,System.String)">
             <summary>
             Unsets a callback invoked whenever messages are received on the specified
             channel.  The tag denotes a specific callback.
             </summary>
             <remarks>
             <para>
             This method does <b>not</b> unsubscribe you from a channel. Rather, it stop the
             callback from executing when messages are received on a particular
             channel.
             </para>
             </remarks>
             <param name="channel">The channel over which the messages are being received.</param>
             <param name="tag">The identifier for this callback.</param>
             <returns><c>true</c> if the callback was previously set; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Connect">
             <summary>
             Sets up and maintains a streaming connection to the server using default values.
             </summary>
             <remarks>
             While this method will typically run asychronously, the WebSync client is
             designed to be used without (much) consideration for its asynchronous nature.
             To that end, any calls to methods that require an active connection, like
             bind, subscribe, and publish, will be
             queued automatically and executed once this method has completed successfully.
             </remarks>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Connect(FM.WebSync.ConnectArgs)">
             <summary>
             Sets up and maintains a streaming connection to the server.
             </summary>
             <remarks>
             <para>
             While this method will typically run asychronously, the WebSync client
             is designed to be used without (much) consideration for its asynchronous nature.
             To that end, any calls to methods that require an active connection, like
             bind, subscribe, and publish, will be
             queued automatically and executed once this method has completed successfully.
             </para>
             <example>
             <code>
             client.Connect(new ClientConnectArgs
             {
                 OnSuccess = (args) =&gt;
                 {
                     Console.WriteLine("Connected with ID " + args.ClientId + ".");
                 },
                 OnStreamFailure = (args) =&gt;
                 {
                     Console.WriteLine("Network problems have been detected. " +
                         (args.WillReconnect ? "Will" : "Will not") + " reconnect.");
                 },
                 OnFailure = (args) =&gt;
                 {
                     Console.WriteLine("Could not connect. " + args.Exception.Message);
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="connectArgs">The connect arguments.
             See <see cref="T:FM.WebSync.ConnectArgs" /> for details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Disconnect">
             <summary>
             Takes down a streaming connection to the server and unsubscribes the client
             using default values.
             </summary>
             <remarks>
             After the disconnect completes successfully,
             any further calls to methods that require an active connection, like
             bind, subscribe, and publish, will be
             queued automatically and executed only if/when the client reconnects.
             </remarks>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Disconnect(FM.WebSync.DisconnectArgs)">
             <summary>
             Takes down a streaming connection to the server and unsubscribes/unbinds the client.
             </summary>
             <remarks>
             <para>
             After the disconnect completes successfully,
             any further calls to methods that require an active connection, like
             bind, subscribe, and publish, will be
             queued automatically and executed only if/when the client reconnects.
             </para>
             <example>
             <code>
             client.Disconnect(new ClientDisconnectArgs
             {
                 OnComplete = (args) =&gt;
                 {
                     if (args.Exception == null)
                     {
                         Console.WriteLine("Disconnected.");
                     }
                     else
                     {
                         Console.WriteLine("Disconnected, but not gracefully. " + args.Exception.Message);
                     }
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="disconnectArgs">The disconnect arguments.
             See <see cref="T:FM.WebSync.DisconnectArgs" /> for details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Bind(FM.WebSync.BindArgs)">
             <summary>
             Binds the client to a public or private data record so it is visible to other
             clients or just to the server.
             </summary>
             <remarks>
             <para>
             When the bind completes successfully, the OnSuccess callback
             will be invoked, passing in the bound record(s),
             <b>including any modifications made on the server</b>.
             </para>
             <example>
             <code>
             client.Bind(new ClientBindArgs
             {
                 Record = new Record
                 {
                     Key = "userdetails",
                     ValueJson = Json.Serialize(new UserDetails // custom class
                     {
                         UserName = "jdoe",
                         Email = "john.doe@frozenmountain.com"
                     })
                 },
                 OnSuccess = (args) =&gt;
                 {
                     Console.WriteLine("Bound to record with key " + args.Record.Key + ".");
                 },
                 OnFailure = (args) =&gt;
                 {
                     Console.WriteLine("Could not bind. " + args.Exception.Message);
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="bindArgs">The bind arguments.
             See <see cref="T:FM.WebSync.BindArgs" /> for details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Unbind(FM.WebSync.UnbindArgs)">
             <summary>
             Unbinds the client from a public or private data record so it is no longer visible
             by other clients or the server.
             </summary>
             <remarks>
             When the unbind completes successfully, the OnSuccess callback
             will be invoked, passing in the unbound
             record(s), <b>including any modifications made on the server</b>.
             <example>
             <code>
             client.Unbind(new ClientUnbindArgs
             {
                 Record = new Record
                 {
                     Key = "userdetails" // previously bound key
                 },
                 OnSuccess = (args) =&gt;
                 {
                     Console.WriteLine("Unbound from record with key " + args.Record.Key + ".");
                 },
                 OnFailure = (args) =&gt;
                 {
                     Console.WriteLine("Could not unbind. " + args.Exception.Message);
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="unbindArgs">The unbind arguments.
             See <see cref="T:FM.WebSync.UnbindArgs" /> for details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Subscribe(FM.WebSync.SubscribeArgs)">
             <summary>
             Subscribes the client to receive messages on one or more channels.
             </summary>
             <remarks>
             When the subscribe completes successfully, the OnSuccess callback
             will be invoked, passing in the subscribed
             channel(s), <b>including any modifications made on the server</b>.
             <example>
             <code>
             client.Subscribe(new ClientSubscribeArgs
             {
                 Channel = "/example",
                 OnSuccess = (args) =&gt;
                 {
                     Console.WriteLine("Subscribed to channel " + args.Channel + ".");
                 },
                 OnFailure = (args) =&gt;
                 {
                     Console.WriteLine("Could not subscribe. " + args.Exception.Message);
                 },
                 OnReceive = (args) =&gt;
                 {
                     Console.WriteLine("Received data! (" + args.DataJson + ")");
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="subscribeArgs">The subscribe arguments.
             See <see cref="T:FM.WebSync.SubscribeArgs" /> for details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Unsubscribe(FM.WebSync.UnsubscribeArgs)">
             <summary>
             Unsubscribes the client from receiving messages on one or more channels.
             </summary>
             <remarks>
             When the unsubscribe completes successfully, the OnSuccess callback
             will be invoked, passing in the
             unsubscribed channel(s), <b>including any modifications made on the server</b>.
             <example>
             <code>
             client.Unsubscribe(new ClientUnsubscribeArgs
             {
                 Channel = "/example",
                 OnSuccess = (args) =&gt;
                 {
                     Console.WriteLine("Unsubscribed from channel " + args.Channel + ".");
                 },
                 OnFailure = (args) =&gt;
                 {
                     Console.WriteLine("Could not unsubscribe. " + args.Exception.Message);
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="unsubscribeArgs">The unsubscribe arguments.
             See <see cref="T:FM.WebSync.UnsubscribeArgs" /> for details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Publish(FM.WebSync.PublishArgs)">
             <summary>
             Sends data to a specified channel.
             </summary>
             <remarks>
             When the publish completes successfully, the OnSuccess callback
             will be invoked, passing in the
             channel and published data, <b>including any modifications made on the server</b>.
             <example>
             <code>
             client.Publish(new ClientPublishArgs
             {
                 Channel = "/example",
                 DataJson = "{\"text\":\"Hello, world!\"}",
                 OnSuccess = (args) =&gt;
                 {
                     Console.WriteLine("Data sent to " + args.Channel + ".");
                 },
                 OnFailure = (args) =&gt;
                 {
                     Console.WriteLine("Could not publish. " + args.Exception.Message);
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="publishArgs">The publish arguments.
             See <see cref="T:FM.WebSync.PublishArgs" /> for more details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Notify(FM.WebSync.NotifyArgs)">
             <summary>
             Sends data to a specified client ID.
             </summary>
             <remarks>
             When the notify completes successfully, the OnSuccess callback
             will be invoked, passing in the
             channel and published data, <b>including any modifications made on the server</b>.
             <example>
             <code>
             client.Notify(new ClientNotifyArgs
             {
                 ClientId = new Guid("12345678-1234-1234-1234-1234567890ab"),
                 DataJson = "{\"text\":\"Hello, world!\"}",
                 OnSuccess = (args) =&gt;
                 {
                     Console.WriteLine("Data sent to " + args.ClientId + ".");
                 },
                 OnFailure = (args) =&gt;
                 {
                     Console.WriteLine("Could not notify. " + args.Exception.Message);
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="notifyArgs">The notify arguments.
             See <see cref="T:FM.WebSync.NotifyArgs" /> for more details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.Service(FM.WebSync.ServiceArgs)">
             <summary>
             Services data to a specified channel.
             </summary>
             <remarks>
             <para>
             Servicing allows the client to send data to the server in a traditional
             request/response fashion. Data is not broadcast and the state of the
             client remains unchanged after service calls.
             </para>
             <para>
             When the service completes successfully, the OnSuccess callback
             will be invoked, passing in the
             channel and serviced data, <b>including any modifications made on the server</b>.
             </para>
             <example>
             <code>
             client.Service(new ClientServiceArgs
             {
                 Channel = "/user/save",
                 DataJson = "{\"firstName\":\"John\",\"lastName\":\"Doe\",\"id\":42}",
                 OnSuccess = (args) =&gt;
                 {
                     Console.WriteLine("Serviced data to " + args.Channel + ".");
                 },
                 OnFailure = (args) =&gt;
                 {
                     Console.WriteLine("Could not service. " + args.Exception.Message);
                 }
             });
             </code>
             </example>
             </remarks>
             <param name="serviceArgs">The service arguments.
             See <see cref="T:FM.WebSync.ServiceArgs" /> for more details.</param>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.StartBatch">
             <summary>
             Flags the start of a batch of requests to be sent together to the server.
             </summary>
             <remarks>
             This is used in conjunction with <see cref="M:FM.WebSync.Client.EndBatch" />, which flags
             the end of a batch of requests and starts sending them to the server. Batching
             is used to optimize round-trips to the server by reducing the overhead
             associated with creating multiple HTTP requests.
             </remarks>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.InBatch">
             <summary>
             Gets whether or not requests are currently being batched.
             </summary>
             <returns><c>true</c> if requests are being batched; otherwise <c>false</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Client.EndBatch">
             <summary>
             Flags the end of a batch of requests and starts sending them to the server.
             </summary>
             <remarks>
             This is used in conjunction with <see cref="M:FM.WebSync.Client.StartBatch" />, which must
             be called first to flag the start of a batch of requests to be sent together
             to the server. Batching is used to optimize round-trips to the server by
             reducing the overhead associated with creating multiple HTTP requests.
             </remarks>
             <returns>The client.</returns>
            </member>
        <member name="M:FM.WebSync.Client.GetSubscribedChannels">
             <summary>
             Gets a list of all the channels to which the client is currently subscribed.
             </summary>
             <returns>A list of all the channels to which the client is currently subscribed</returns>
            </member>
        <member name="M:FM.WebSync.Client.GetSubscribedChannels(System.String)">
             <summary>
             Gets a list of all the channels to which the client is currently subscribed.
             </summary>
             <param name="tag">The subscription tag identifier.</param>
             <returns>
             A list of all the channels to which the client is currently subscribed
             </returns>
            </member>
        <member name="M:FM.WebSync.Client.GetBoundRecords">
             <summary>
             Gets a collection of all the records to which the client is currently bound.
             </summary>
             <returns>A collection of all the records to which the client is currently bound</returns>
            </member>
        <member name="M:FM.WebSync.Client.ConnectAsync">
             <summary>
             Invokes the Connect operation using .NET async tasks.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.ConnectAsync(FM.WebSync.ConnectArgs)">
             <summary>
             Invokes the Connect operation using .NET async tasks.
             </summary>
             <param name="connectArgs">The connect arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.DisconnectAsync">
             <summary>
             Invokes the Disconnect operation using .NET async tasks.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.DisconnectAsync(FM.WebSync.DisconnectArgs)">
             <summary>
             Invokes the Disconnect operation using .NET async tasks.
             </summary>
             <param name="disconnectArgs">The disconnect arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.SubscribeAsync(FM.WebSync.SubscribeArgs)">
             <summary>
             Invokes the Subscribe operation using .NET async tasks.
             </summary>
             <param name="subscribeArgs">The subscribe arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.UnsubscribeAsync(FM.WebSync.UnsubscribeArgs)">
             <summary>
             Invokes the Unsubscribe operation using .NET async tasks.
             </summary>
             <param name="unsubscribeArgs">The unsubscribe arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.BindAsync(FM.WebSync.BindArgs)">
             <summary>
             Invokes the Bind operation using .NET async tasks.
             </summary>
             <param name="bindArgs">The bind arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.UnbindAsync(FM.WebSync.UnbindArgs)">
             <summary>
             Invokes the Unbind operation using .NET async tasks.
             </summary>
             <param name="unbindArgs">The unbind arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.PublishAsync(FM.WebSync.PublishArgs)">
             <summary>
             Invokes the Publish operation using .NET async tasks.
             </summary>
             <param name="publishArgs">The publish arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.NotifyAsync(FM.WebSync.NotifyArgs)">
             <summary>
             Invokes the Notify operation using .NET async tasks.
             </summary>
             <param name="notifyArgs">The notify arguments.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Client.ServiceAsync(FM.WebSync.ServiceArgs)">
             <summary>
             Invokes the Service operation using .NET async tasks.
             </summary>
             <param name="serviceArgs">The service arguments.</param>
             <returns></returns>
            </member>
        <member name="T:FM.WebSync.ClientSendState">
             <summary>
             The internal state of a client request batch sent to the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientSendState.Requests">
             <summary>
             Gets or sets the requests to be sent to the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientSendState.RequestMapping">
             <summary>
             Gets or sets the mapping of request IDs to requests.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientSendState.IsStream">
             <summary>
             Gets or sets whether this is a streaming request.
             </summary>
            </member>
        <member name="T:FM.WebSync.ClientRequest">
             <summary>
             Internal class used to hold details about a client request queued for
             delivery to the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientRequest.Message">
             <summary>
             Gets or sets the request the client wishes to send to the server.
             </summary>
            </member>
        <member name="P:FM.WebSync.ClientRequest.Callback">
             <summary>
             Gets or sets the callback to invoke after receiving a response from the server.
             </summary>
            </member>
        <member name="T:FM.WebSync.Defaults">
             <summary>
             A collection of read-only default values for WebSync.
             </summary>
            </member>
        <member name="P:FM.WebSync.Defaults.DomainKey">
             <summary>
             Gets the default domain key ("11111111-1111-1111-1111-111111111111").
             </summary>
            </member>
        <member name="P:FM.WebSync.Defaults.DomainName">
             <summary>
             Gets the default domain name ("localhost").
             </summary>
            </member>
        <member name="T:FM.WebSync.PublishingClient">
             <summary>
             Details about the client sending the publication data.
             </summary>
            </member>
        <member name="M:FM.WebSync.PublishingClient.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.PublishingClient" /> class.
             </summary>
            </member>
        <member name="M:FM.WebSync.PublishingClient.#ctor(System.Nullable{System.Guid},System.Collections.Generic.Dictionary{System.String,FM.WebSync.Record})">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.PublishingClient" /> class.
             </summary>
             <param name="clientId">The publishing client's ID.</param>
             <param name="boundRecords">The records bound to the client.</param>
            </member>
        <member name="P:FM.WebSync.PublishingClient.ClientId">
             <summary>
             Gets or sets the publishing client's ID.
             </summary>
            </member>
        <member name="P:FM.WebSync.PublishingClient.BoundRecords">
             <summary>
             Gets or sets the publishing client's bound records.
             </summary>
            </member>
        <member name="M:FM.WebSync.PublishingClient.GetBoundRecordValueJson(System.String)">
             <summary>
             Gets the JSON value of a record bound to the publishing client.
             </summary>
             <param name="key">The record key.</param>
             <returns>The JSON value of the record, if it exists, or <c>null</c>.</returns>
            </member>
        <member name="M:FM.WebSync.PublishingClient.ToJson">
             <summary>
             Serializes this instance to JSON.
             </summary>
             <returns>The JSON-formatted publishing client.</returns>
            </member>
        <member name="M:FM.WebSync.PublishingClient.ToJson(FM.WebSync.PublishingClient)">
             <summary>
             Serializes a publishing client to JSON.
             </summary>
             <param name="publishingClient">The publishing client to serialize.</param>
             <returns>The JSON-formatted publishing client.</returns>
            </member>
        <member name="M:FM.WebSync.PublishingClient.FromJson(System.String)">
             <summary>
             Deserializes a JSON-formatted publishing client.
             </summary>
             <param name="publishingClientJson">The JSON-formatted publishing client to deserialize.</param>
             <returns>The publishing client.</returns>
            </member>
        <member name="T:FM.WebSync.MessageType">
             <summary>
             Possible message types for <see cref="T:FM.WebSync.Message">Messages</see>.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Connect">
             <summary>
             Message is a connect request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Disconnect">
             <summary>
             Message is a disconnect request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Bind">
             <summary>
             Messages is a bind request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Unbind">
             <summary>
             Messages is an unbind request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Subscribe">
             <summary>
             Message is a subscribe request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Unsubscribe">
             <summary>
             Message is an unsubscribe request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Publish">
             <summary>
             Message is a publish request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Notify">
             <summary>
             Message is a notify request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Service">
             <summary>
             Message is a service request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Stream">
             <summary>
             Message is a stream request/response.
             </summary>
            </member>
        <member name="F:FM.WebSync.MessageType.Unknown">
             <summary>
             Message is an unknown request/response.
             </summary>
            </member>
        <member name="T:FM.WebSync.Extensible">
             <summary>
             <para>
             Base class that defines the properties and methods shared by any class that
             is considered extensible by the Bayeux specification.
             </para>
             <para>
             The Bayeux specification defines the Ext field, which allows custom data to be
             stored with a message using a namespaced key to access the information. This class
             provides methods that store and retrieve JSON data stored in this manner. For example,
             the <see cref="P:FM.WebSync.Extensible.MetaJson" /> property uses the Ext field to store its value
             using "fm.meta" as a key.
             </para>
             <para>
             In addition, classes which inherit from <see cref="T:FM.WebSync.Extensible" /> can store
             dynamic property values for local read/write access without the need to serialize
             to JSON. This can aid greatly in the
             development of third-party extensions to WebSync. Custom information can be stored
             with method arguments in the "before" event and read out again for further
             processing in the "after" event.
             </para>
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.MetaExtensionName">
             <summary>
             The reserved extension name for message/publication meta-data.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.PublishingClientExtensionName">
             <summary>
             The reserved extension name for records bound to publishing clients.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.NotifyingClientExtensionName">
             <summary>
             The reserved extension name for records bound to notifying clients.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.ServerTimeoutExtensionName">
             <summary>
             The reserved extension name for the server-defined timeout interval.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.SessionIdExtensionName">
             <summary>
             The reserved extension name for the secure session ID.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.TagExtensionName">
             <summary>
             The reserved extension name for tags.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.NotifyClientIdExtensionName">
             <summary>
             The reserved extension name for the client ID targeted by a notification.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.AcknowledgementExtensionName">
             <summary>
             The reserved extension name for acknowledgement of received messages.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.ServerActionsExtensionName">
             <summary>
             The reserved extension name for passing back server actions to a client.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.DisableBinaryExtensionName">
             <summary>
             The reserved extension name for disabling the transmission of binary data as binary.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.LastClientIdExtensionName">
             <summary>
             The reserved extension name for enhanced cleanup of old client IDs.
             </summary>
            </member>
        <member name="F:FM.WebSync.Extensible.LastSessionIdExtensionName">
             <summary>
             The reserved extension name for enhanced cleanup of old session IDs.
             </summary>
            </member>
        <member name="P:FM.WebSync.Extensible.Extensions">
             <summary>
             Gets or sets the internal extensions collection.
             </summary>
            </member>
        <member name="P:FM.WebSync.Extensible.ExtensionCount">
             <summary>
             Gets the number of extensions stored with this instance.
             </summary>
            </member>
        <member name="P:FM.WebSync.Extensible.ExtensionNames">
             <summary>
             Gets the names of the extensions stored with this instance.
             </summary>
            </member>
        <member name="M:FM.WebSync.Extensible.CopyExtensions(FM.WebSync.Extensible)">
             <summary>
             Copies extension values from one instance into this instance.
             </summary>
             <param name="extensible">The object with the extensions to copy.</param>
             <returns>This instance.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SetExtensionValueJson(System.String,System.String)">
             <summary>
             Stores a serialized value in the extensions.  Must be valid JSON.
             </summary>
             <param name="name">Fully-qualified extension name.</param>
             <param name="valueJson">The extension value in valid JSON format.</param>
            </member>
        <member name="M:FM.WebSync.Extensible.SetExtensionValueJson(System.String,System.String,System.Boolean)">
             <summary>
             Stores a serialized value in the extensions.  Must be valid JSON.
             </summary>
             <param name="name">Fully-qualified extension name.</param>
             <param name="valueJson">The extension value in valid JSON format.</param>
             <param name="validate">Whether or not to validate the JSON value.</param>
            </member>
        <member name="M:FM.WebSync.Extensible.GetExtensionValueJson(System.String)">
             <summary>
             Gets a serialized value stored in the extensions.
             </summary>
             <param name="name">Fully-qualified extension name.</param>
             <returns>The extension value in JSON format.</returns>
            </member>
        <member name="P:FM.WebSync.Extensible.MetaJson">
             <summary>
             Gets or sets meta-data associated with the message/publication.  Must be valid JSON. 
             </summary>
             <remarks>
             Use this property to define meta-data about the request itself, such as
             authentication details, etc.
             </remarks>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedGetKey(FM.WebSync.Record[])">
             <summary>
             Gets the first key from an array of records.
             </summary>
             <param name="records">The records to scan.</param>
             <returns>The first key.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetKey(System.String)">
             <summary>
             Converts a key to a validated record array.
             </summary>
             <param name="key">The key to convert.</param>
             <returns>The validated record array.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetKey(System.String,System.Boolean)">
             <summary>
             Converts a key to a validated record array.
             </summary>
             <param name="key">The key to convert.</param>
             <param name="validate">Whether or not to validate the record.</param>
             <returns>The validated record array.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedGetKeys(FM.WebSync.Record[])">
             <summary>
             Converts an array of records to an array of keys.
             </summary>
             <param name="records">The array of records.</param>
             <returns>The array of keys.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetKeys(System.String[])">
             <summary>
             Converts an array of keys to an array of validated records.
             </summary>
             <param name="keys">The array of keys.</param>
             <returns>The array of records.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetKeys(System.String[],System.Boolean)">
             <summary>
             Converts an array of keys to an array of validated records.
             </summary>
             <param name="keys">The array of keys.</param>
             <param name="validate">Whether or not to validate the records.</param>
             <returns>The array of records.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedGetRecord(FM.WebSync.Record[])">
             <summary>
             Gets the first record from an array of records.
             </summary>
             <param name="records">The records to scan.</param>
             <returns>The first record.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetRecord(FM.WebSync.Record)">
             <summary>
             Converts a record to a validated record array.
             </summary>
             <param name="record">The record to convert.</param>
             <returns>The validated record array.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetRecord(FM.WebSync.Record,System.Boolean)">
             <summary>
             Converts a record to a validated record array.
             </summary>
             <param name="record">The record to convert.</param>
             <param name="validate">Whether or not to validate the record.</param>
             <returns>The validated record array.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedGetRecords(FM.WebSync.Record[])">
             <summary>
             Converts an array of records to itself.
             </summary>
             <param name="records">The array of records.</param>
             <returns>The array of records.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetRecords(FM.WebSync.Record[])">
             <summary>
             Converts an array of records to an array of validated records.
             </summary>
             <param name="records">The array of records.</param>
             <returns>The array of validated records.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetRecords(FM.WebSync.Record[],System.Boolean)">
             <summary>
             Converts an array of records to an array of validated records.
             </summary>
             <param name="records">The array of records.</param>
             <param name="validate">Whether or not to validate the records.</param>
             <returns>The array of validated records.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedGetChannel(System.String[])">
             <summary>
             Gets the first channel from an array of channels.
             </summary>
             <param name="channels">The channels to scan.</param>
             <returns>The first channel.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetChannel(System.String)">
             <summary>
             Converts a channel to a validated channel array.
             </summary>
             <param name="channel">The channel to convert.</param>
             <returns>The validated channel array.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetChannel(System.String,System.Boolean)">
             <summary>
             Converts a channel to a validated channel array.
             </summary>
             <param name="channel">The channel to convert.</param>
             <param name="validate">Whether or not to validate the channel.</param>
             <returns>The validated channel array.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedGetChannels(System.String[])">
             <summary>
             Converts an array of channels to itself.
             </summary>
             <param name="channels">The array of channels.</param>
             <returns>The array of channels.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetChannels(System.String[])">
             <summary>
             Converts an array of channels to an array of validated channels.
             </summary>
             <param name="channels">The array of channels.</param>
             <returns>The array of validated channels.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.SharedSetChannels(System.String[],System.Boolean)">
             <summary>
             Converts an array of channels to an array of validated channels.
             </summary>
             <param name="channels">The array of channels.</param>
             <param name="validate">Whether or not to validate the channels.</param>
             <returns>The array of validated channels.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.ValidateChannel(System.String,System.String@)">
             <summary>
             Validates a channel.
             </summary>
             <param name="channel">The channel to validate.</param>
             <param name="error">The error, if validation failed.</param>
             <returns><c>true</c> if validation succeeded; otherwise <c>false</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Extensible.ValidateRecord(FM.WebSync.Record,System.String@)">
             <summary>
             Validates a record.
             </summary>
             <param name="record">The record to validate.</param>
             <param name="error">The error, if validation failed.</param>
             <returns><c>true</c> if validation succeeded; otherwise <c>false</c>.</returns>
            </member>
        <member name="T:FM.WebSync.Extensions">
             <summary>
             The extensions library that wraps the Bayeux Ext field, used with instances of classes
             that derive from <see cref="T:FM.WebSync.Extensible" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.Extensions.Count">
             <summary>
             Gets the number of extensions in the library.
             </summary>
            </member>
        <member name="P:FM.WebSync.Extensions.Names">
             <summary>
             Gets the names of the extensions in the library.
             </summary>
            </member>
        <member name="M:FM.WebSync.Extensions.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Extensions" /> class.
             </summary>
            </member>
        <member name="M:FM.WebSync.Extensions.GetValueJson(System.String)">
             <summary>
             Gets a serialized value stored in the extensions.
             </summary>
             <param name="name">Fully-qualified extension name.</param>
             <returns>The extension value (in JSON format).</returns>
            </member>
        <member name="M:FM.WebSync.Extensions.SetValueJson(System.String,System.String)">
             <summary>
             Stores a serialized value in the extensions.  Must be valid JSON.
             </summary>
             <param name="name">Fully-qualified extension name.</param>
             <param name="valueJson">The extension value in valid JSON format.</param>
            </member>
        <member name="M:FM.WebSync.Extensions.SetValueJson(System.String,System.String,System.Boolean)">
             <summary>
             Stores a serialized value in the extensions.  Must be valid JSON.
             </summary>
             <param name="name">Fully-qualified extension name.</param>
             <param name="valueJson">The extension value in valid JSON format.</param>
             <param name="validate">Whether or not to validate the JSON.</param>
            </member>
        <member name="M:FM.WebSync.Extensions.ToJson">
             <summary>
             Serializes the extensions library to JSON.
             </summary>
             <returns>The serialized extensions library.</returns>
            </member>
        <member name="M:FM.WebSync.Extensions.ToJson(FM.WebSync.Extensions)">
             <summary>
             Serializes a single extensions library to JSON.
             </summary>
             <param name="extensions">The extensions library to serialize.</param>
             <returns>The serialized extensions library.</returns>
            </member>
        <member name="M:FM.WebSync.Extensions.FromJson(System.String)">
             <summary>
             Deserializes a single extensions library from JSON.
             </summary>
             <param name="extensionsJson">The JSON extensions library to deserialize.</param>
             <returns>The deserialized extensions library.</returns>
            </member>
        <member name="T:FM.WebSync.Message">
             <summary>
             The WebSync message used for all <see cref="T:FM.WebSync.Client" /> requests/responses.
             </summary>
            </member>
        <member name="M:FM.WebSync.Message.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Message" /> class.
             </summary>
            </member>
        <member name="M:FM.WebSync.Message.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Message" /> class.
             </summary>
             <param name="bayeuxChannel">The Bayeux channel with which to initialize the message.</param>
            </member>
        <member name="P:FM.WebSync.Message.Id">
             <summary>
             Gets or sets the unique message identifier.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.ClientId">
             <summary>
             Gets or sets the unique identifier of the current client associated with the request/response.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Channel">
             <summary>
             Gets or sets the channel to which the current client is publishing, subscribing, or unsubscribing.
             Overrides <see cref="P:FM.WebSync.Message.Channels" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Channels">
             <summary>
             Gets or sets the channels to which the current client is subscribing or unsubscribing.
             Overrides <see cref="P:FM.WebSync.Message.Channel" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Tag">
             <summary>
             Gets or sets the tag associated with the request.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Record">
             <summary>
             Gets or sets the record to which the current client is binding or unbinding.
             Overrides <see cref="P:FM.WebSync.Message.Records" />, <see cref="P:FM.WebSync.Message.Key" />, and <see cref="P:FM.WebSync.Message.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Records">
             <summary>
             Gets or sets the records to which the current client is binding or unbinding.
             Overrides <see cref="T:FM.WebSync.Record" />, <see cref="P:FM.WebSync.Message.Key" />, and <see cref="P:FM.WebSync.Message.Keys" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Key">
             <summary>
             Gets or sets the record key to which the current client is binding or unbinding.
             Overrides <see cref="P:FM.WebSync.Message.Keys" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.Message.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Keys">
             <summary>
             Gets or sets the record keys to which the current client is binding or unbinding.
             Overrides <see cref="P:FM.WebSync.Message.Key" />, <see cref="T:FM.WebSync.Record" />, and <see cref="P:FM.WebSync.Message.Records" />.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.NotifyClientId">
             <summary>
             Gets or sets the ID of the client which the current client is notifying.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.LastClientId">
             <summary>
             Gets or sets the last used client ID.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.LastSessionId">
             <summary>
             Gets or sets the last used session ID.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.DisableBinary">
             <summary>
             Gets or sets whether binary is disabled.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Acknowledgement">
             <summary>
             Gets or sets the acknowledgement flag, used internally for stream requests following message delivery.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.ServerActions">
             <summary>
             Gets or sets the server actions, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Type">
             <summary>
             Gets the type of the message.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.BayeuxChannel">
             <summary>
             Gets or sets the Bayeux message channel.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Advice">
             <summary>
             Gets or sets details on how the client should reconnect, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.ConnectionType">
             <summary>
             Gets or sets the type of connection the client is using, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.SupportedConnectionTypes">
             <summary>
             Gets or sets the connection types supported by an endpoint, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.MinimumVersion">
             <summary>
             Gets or sets the minimum supported server version, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.Version">
             <summary>
             Gets or sets the current server version, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.SessionId">
             <summary>
             Gets or sets the session ID associated with the message, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.ServerTimeout">
             <summary>
             Gets or sets the server timeout, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.PublishingClient">
             <summary>
             Gets or sets the publishing client details, used internally.
             </summary>
            </member>
        <member name="P:FM.WebSync.Message.NotifyingClient">
             <summary>
             Gets or sets the notifying client details, used internally.
             </summary>
            </member>
        <member name="M:FM.WebSync.Message.IsBindingTo(System.String)">
             <summary>
             Determines whether or not the current message represents a bind
             request/response for a particular key.
             </summary>
             <param name="key">The key to test.</param>
             <returns><c>true</c> if the message represents a bind request/response
             for the specified key; otherwise <c>false</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Message.IsUnbindingFrom(System.String)">
             <summary>
             Determines whether or not the current message represents an unbind
             request/response for a particular key.
             </summary>
             <param name="key">The key to test.</param>
             <returns><c>true</c> if the message represents an unbind request/response
             for the specified key; otherwise <c>false</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Message.IsSubscribingTo(System.String)">
             <summary>
             Determines whether or not the current message represents a subscribe
             request/response for a particular channel.
             </summary>
             <param name="channel">The channel to test.</param>
             <returns><c>true</c> if the message represents a subscribe request/response
             for the specified channel; otherwise <c>false</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Message.IsUnsubscribingFrom(System.String)">
             <summary>
             Determines whether or not the current message represents an unsubscribe
             request/response for a particular channel.
             </summary>
             <param name="channel">The channel to test.</param>
             <returns><c>true</c> if the message represents an unsubscribe request/response
             for the specified channel; otherwise <c>false</c>.</returns>
            </member>
        <member name="M:FM.WebSync.Message.IsConnect">
             <summary>
             Detects whether this is a connect request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsDisconnect">
             <summary>
             Detects whether this is a disconnect request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsBind">
             <summary>
             Detects whether this is a bind request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsUnbind">
             <summary>
             Detects whether this is a bind request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsSubscribe">
             <summary>
             Detects whether this is a subscribe request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsUnsubscribe">
             <summary>
             Detects whether this is an unsubscribe request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsService">
             <summary>
             Detects whether this is a service request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsPublish">
             <summary>
             Detects whether this is a publish request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsNotify">
             <summary>
             Detects whether this is a notify request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.IsStream">
             <summary>
             Detects whether this is a stream request/response.
             </summary>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Message.ToJsonNoData(System.Byte[]@,System.String@)">
             <summary>
             Serializes the message to JSON (skipping the data field).
             </summary>
             <param name="dataBytes">The data bytes.</param>
             <param name="dataJson">The data JSON.</param>
             <returns>
             The message in JSON-serialized format.
             </returns>
            </member>
        <member name="M:FM.WebSync.Message.ToJson">
             <summary>
             Serializes the message to JSON.
             </summary>
             <returns>The message in JSON-serialized format.</returns>
            </member>
        <member name="M:FM.WebSync.Message.ToJson(FM.WebSync.Message)">
             <summary>
             Serializes a message to JSON.
             </summary>
             <param name="message">A message to serialize.</param>
             <returns>A JSON-serialized message.</returns>
            </member>
        <member name="M:FM.WebSync.Message.FromJson(System.String)">
             <summary>
             Deserializes a message from JSON.
             </summary>
             <param name="messageJson">A JSON string to deserialize.</param>
             <returns>A deserialized message.</returns>
            </member>
        <member name="M:FM.WebSync.Message.ToJsonMultiple(FM.WebSync.Message[])">
             <summary>
             Serializes a list of messages to JSON.
             </summary>
             <param name="messages">A list of messages to serialize.</param>
             <returns>A JSON-serialized array of messages.</returns>
            </member>
        <member name="M:FM.WebSync.Message.FromJsonMultiple(System.String)">
             <summary>
             Deserializes a list of messages from JSON.
             </summary>
             <param name="messagesJson">A JSON string to deserialize.</param>
             <returns>A deserialized list of messages.</returns>
            </member>
        <member name="M:FM.WebSync.Message.ToBinary">
             <summary>
             Serializes the message to binary.
             </summary>
             <returns>The message in binary-serialized format.</returns>
            </member>
        <member name="M:FM.WebSync.Message.ToBinary(FM.WebSync.Message)">
             <summary>
             Serializes a message to binary.
             </summary>
             <param name="message">A message to serialize.</param>
             <returns>A binary-serialized message.</returns>
            </member>
        <member name="M:FM.WebSync.Message.FromBinary(System.Byte[])">
             <summary>
             Deserializes a message from binary.
             </summary>
             <param name="bytes">A byte array to deserialize.</param>
             <returns>A deserialized message.</returns>
            </member>
        <member name="M:FM.WebSync.Message.FromBinary(System.Byte[],System.Int32)">
             <summary>
             Deserializes a message from binary.
             </summary>
             <param name="bytes">A byte array to deserialize.</param>
             <param name="offset">The offset into the array.</param>
             <returns>A deserialized message.</returns>
            </member>
        <member name="M:FM.WebSync.Message.ToBinaryMultiple(FM.WebSync.Message[])">
             <summary>
             Serializes a list of messages to binary.
             </summary>
             <param name="messages">A list of messages to serialize.</param>
             <returns>A binary-serialized array of messages.</returns>
            </member>
        <member name="M:FM.WebSync.Message.FromBinaryMultiple(System.Byte[])">
             <summary>
             Deserializes a list of messages from binary.
             </summary>
             <param name="bytes">A byte array to deserialize.</param>
             <returns>A deserialized list of messages.</returns>
            </member>
        <member name="T:FM.WebSync.Publication">
             <summary>
             The WebSync publication used for direct publishing.
             </summary>
            </member>
        <member name="M:FM.WebSync.Publication.#ctor">
             <summary>
             Creates a new publication.
             </summary>
            </member>
        <member name="M:FM.WebSync.Publication.#ctor(System.String)">
             <summary>
             Creates a new publication with a channel.
             </summary>
             <param name="channel">The channel to target.</param>
            </member>
        <member name="M:FM.WebSync.Publication.#ctor(System.String,System.String)">
             <summary>
             Creates a new publication with a channel and JSON data.
             </summary>
             <param name="channel">The channel to target.</param>
             <param name="dataJson">The data to send (in JSON format).</param>
            </member>
        <member name="M:FM.WebSync.Publication.#ctor(System.String,System.Byte[])">
             <summary>
             Creates a new publication with a channel, JSON data, and binary data.
             </summary>
             <param name="channel">The channel to target.</param>
             <param name="dataBytes">The data to send (in binary format).</param>
            </member>
        <member name="M:FM.WebSync.Publication.#ctor(System.String,System.String,System.String)">
             <summary>
             Creates a new publication with a channel and JSON data.
             </summary>
             <param name="channel">The channel to target.</param>
             <param name="dataJson">The data to send (in JSON format).</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="M:FM.WebSync.Publication.#ctor(System.String,System.Byte[],System.String)">
             <summary>
             Creates a new publication with a channel, JSON data, and binary data.
             </summary>
             <param name="channel">The channel to target.</param>
             <param name="dataBytes">The data to send (in binary format).</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
            </member>
        <member name="P:FM.WebSync.Publication.Channel">
             <summary>
             Gets or sets the channel the publisher is targeting.
             </summary>
            </member>
        <member name="P:FM.WebSync.Publication.Tag">
             <summary>
             Gets or sets the tag that identifies the contents of the payload.
             </summary>
            </member>
        <member name="M:FM.WebSync.Publication.ToJson">
             <summary>
             Serializes the publication to JSON.
             </summary>
             <returns>The publication in JSON-serialized format.</returns>
            </member>
        <member name="M:FM.WebSync.Publication.ToJson(FM.WebSync.Publication)">
             <summary>
             Serializes a publication to JSON.
             </summary>
             <param name="publication">A publication to serialize.</param>
             <returns>A JSON-serialized publication.</returns>
            </member>
        <member name="M:FM.WebSync.Publication.FromJson(System.String)">
             <summary>
             Deserializes a publication from JSON.
             </summary>
             <param name="publicationJson">A JSON string to deserialize.</param>
             <returns>A deserialized publication.</returns>
            </member>
        <member name="M:FM.WebSync.Publication.ToJsonMultiple(FM.WebSync.Publication[])">
             <summary>
             Serializes a list of publications to JSON.
             </summary>
             <param name="publications">A list of publications to serialize.</param>
             <returns>A JSON-serialized array of publications.</returns>
            </member>
        <member name="M:FM.WebSync.Publication.FromJsonMultiple(System.String)">
             <summary>
             Deserializes a list of publications from JSON.
             </summary>
             <param name="publicationsJson">A JSON string to deserialize.</param>
             <returns>A deserialized list of publications.</returns>
            </member>
        <member name="M:FM.WebSync.Publication.ToMessage(FM.WebSync.Publication)">
             <summary>
             Converts a Publication to its Message format.
             </summary>
             <param name="publication">The publication.</param>
             <returns>The message.</returns>
            </member>
        <member name="M:FM.WebSync.Publication.FromMessage(FM.WebSync.Message)">
             <summary>
             Converts a Publication from its Message format.
             </summary>
             <param name="message">The message.</param>
             <returns>The publication.</returns>
            </member>
        <member name="M:FM.WebSync.Publication.ToMessages(FM.WebSync.Publication[])">
             <summary>
             Converts a set of Publications to their Message formats.
             </summary>
             <param name="publications">The publications.</param>
             <returns>The messages.</returns>
            </member>
        <member name="M:FM.WebSync.Publication.FromMessages(FM.WebSync.Message[])">
             <summary>
             Converts a set of Publications from their Message formats.
             </summary>
             <param name="messages">The messages.</param>
             <returns>The publications.</returns>
            </member>
        <member name="T:FM.WebSync.Publisher">
             <summary>
             <para>
             The WebSync publisher, used for publishing data rapidly and efficiently.
             </para>
             </summary>
             <remarks>
             <para>
             When developing real-time applications, it is often most efficient and secure to
             publish data from a server, a web service, or in general, a source that doesn't
             require the ability to subscribe to channels.  The <see cref="T:FM.WebSync.Publisher" /> is 
             designed to do just that.
             </para>
             <para>
             A common use case for the <see cref="T:FM.WebSync.Publisher" /> is to send out data as it
             arrives from a real-time feed (e.g. stock data, sports scores, news articles, etc.).
             Wherever the feed is located, the <see cref="T:FM.WebSync.Publisher" /> can be used to send
             out the data rapidly to any subscribed clients.
             </para>
             <para>
             For security reasons, WebSync Server blocks Publisher requests by default. To
             enable direct publication, make sure "allowPublishers" is enabled in web.config.
             </para>
             <para>
             The publisher always runs synchronously.
             </para>
             <example>
             <para>
             Here's a simple example of how to create a publisher in C# and publish some data.
             </para>
             <code>
             using System;
             using System.Runtime.Serialization;
             using FM;
             using FM.WebSync;
             
             namespace Sample
             {
                 class Program
                 {
                     [DataContract]
                     private class Payload
                     {
                         [DataMember(Name = "message")]
                         public string Message { get; set; }
                         
                         public Payload(string message)
                         {
                             Message = message;
                         }
                     }
             
                     static void Main(string[] args)
                     {
                         var publisher = new Publisher("http://localhost/websync.ashx");
                         
                         // publish
                         var channel = "/test";
                         var payloadJson = Json.Serialize(new Payload("Hello, this is .NET Publisher."));
                         var p = publisher.Publish(channel, payloadJson);
                         if (p.Successful)
                         {
                             Console.WriteLine("Published.");
                         }
                         else
                         {
                             Console.WriteLine("Could not publish.");
                             Console.WriteLine(p.Error);
                         }
                     }
                 }
             }
             </code>
             </example>
             <para>
             There are multiple overloads for the "Publish" method. For batch
             publications, use the overloads that take a collection of
             <see cref="T:FM.WebSync.Publication">Publications</see>. They will be automatically batched and
             delivered in a single round-trip.
             </para>
             </remarks>
            </member>
        <member name="M:FM.WebSync.Publisher.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Publisher" /> class.
             </summary>
             <param name="requestUrl">The absolute URL of the WebSync server request handler.</param>
            </member>
        <member name="E:FM.WebSync.Publisher.OnPublishRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Publisher" /> publish request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The publisher that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.PublisherPublishRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Publisher.OnPublishResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Publisher" /> publish response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The publisher that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.PublisherPublishResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Publisher.OnNotifyRequest">
             <summary>
             Raised before a <see cref="T:FM.WebSync.Publisher" /> notify request begins. This event is
             designed to support extensions by allowing modifications to be applied
             to a request before it is sent to the server.
             </summary>
             <parameter name="source">The publisher that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.PublisherNotifyRequestArgs" /> associated with the event.</parameter>
            </member>
        <member name="E:FM.WebSync.Publisher.OnNotifyResponse">
             <summary>
             Raised after a <see cref="T:FM.WebSync.Publisher" /> notify response returns. This event is
             designed to support extensions by allowing modifications to be applied
             to a response after it is received from the server.
             </summary>
             <parameter name="source">The publisher that fired the event</parameter>
             <parameter name="args">The <see cref="T:FM.WebSync.PublisherNotifyResponseArgs" /> associated with the event.</parameter>
            </member>
        <member name="M:FM.WebSync.Publisher.Notify(System.Guid,System.String)">
             <summary>
             Sends a notification synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Notification" /> it automatically creates.
             </remarks>
             <param name="clientId">The client to which the data should be sent.</param>
             <param name="dataJson">The data to deliver (in JSON format).</param>
             <returns>The generated notification.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Notify(System.Guid,System.Byte[])">
             <summary>
             Sends a notification synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Notification" /> it automatically creates.
             </remarks>
             <param name="clientId">The client to which the data should be sent.</param>
             <param name="dataBytes">The data to deliver (in binary format).</param>
             <returns>The generated notification.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Notify(System.Guid,System.String,System.String)">
             <summary>
             Sends a notification synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Notification" /> it automatically creates.
             </remarks>
             <param name="clientId">The client to which the data should be sent.</param>
             <param name="dataJson">The data to deliver (in JSON format).</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
             <returns>The generated notification.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Notify(System.Guid,System.Byte[],System.String)">
             <summary>
             Sends a notification synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Notification" /> it automatically creates.
             </remarks>
             <param name="clientId">The client to which the data should be sent.</param>
             <param name="dataBytes">The data to deliver (in binary format).</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
             <returns>The generated notification.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Notify(FM.WebSync.Notification)">
             <summary>
             Sends a notification synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Notification" /> it sends.
             </remarks>
             <param name="notification">The notification to send.</param>
             <returns>The completed notification.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.NotifyMany(FM.WebSync.Notification[])">
             <summary>
             Sends an array of notifications synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Notification">Notifications</see> it sends.
             <example>
             <code>
             var notifications = new[]
             {
                 new Notification
                 {
                     ClientId = new Guid("11111111-1111-1111-1111-111111111111"),
                     DataJson = "{\"text\":\"Hello, client #1!\"}"
                 },
                 new Notification
                 {
                     ClientId = new Guid("22222222-2222-2222-2222-222222222222"),
                     DataJson = "{\"text\":\"Hello, client #2!\"}"
                 }
             };
             try
             {
                 notifications = publisher.Notify(notifications);
             }
             catch (Exception ex) { ... }
             
             foreach (var notification in notifications)
             {
                 if (notification.Successful)
                 {
                     Console.WriteLine("Sent " + notification.DataJson + " to " + notification.ClientId + ".");
                 }
                 else
                 {
                     Console.WriteLine("Could not notify. " + notification.Error);
                 }
             }
             </code>
             </example>
             </remarks>
             <param name="notifications">The notifications to send.</param>
             <returns>The completed notifications.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Publish(System.String,System.String)">
             <summary>
             Sends a publication synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Publication" /> it automatically creates.
             </remarks>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataJson">The data to send (in JSON format).</param>
             <returns>The generated publication.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Publish(System.String,System.Byte[])">
             <summary>
             Sends a publication synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Publication" /> it automatically creates.
             </remarks>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataBytes">The data to send (in binary format).</param>
             <returns>The generated publication.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Publish(System.String,System.String,System.String)">
             <summary>
             Sends a publication synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Publication" /> it automatically creates.
             </remarks>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataJson">The data to send (in JSON format).</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
             <returns>The generated publication.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Publish(System.String,System.Byte[],System.String)">
             <summary>
             Sends a publication synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Publication" /> it automatically creates.
             </remarks>
             <param name="channel">The channel to which the data should be sent.</param>
             <param name="dataBytes">The data to send (in binary format).</param>
             <param name="tag">The tag that identifies the contents of the payload.</param>
             <returns>The generated publication.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.Publish(FM.WebSync.Publication)">
             <summary>
             Sends a publication synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Publication" /> it sends.
             </remarks>
             <param name="publication">The publication to send.</param>
             <returns>The completed publication.</returns>
            </member>
        <member name="M:FM.WebSync.Publisher.PublishMany(FM.WebSync.Publication[])">
             <summary>
             Sends an array of publications synchronously over HTTP.
             </summary>
             <remarks>
             This method always executes synchronously and returns the
             <see cref="T:FM.WebSync.Publication">Publications</see> it sends.
             <example>
             <code>
             var publications = new[]
             {
                 new Publication
                 {
                     Channel = "/channel1",
                     DataJson = "{\"text\":\"Hello, channel #1!\"}"
                 },
                 new Publication
                 {
                     Channel = "/channel2",
                     DataJson = "{\"text\":\"Hello, channel #2!\"}"
                 }
             };
             try
             {
                 publications = publisher.Publish(publications);
             }
             catch (Exception ex) { ... }
             
             foreach (var publication in publications)
             {
                 if (publication.Successful)
                 {
                     Console.WriteLine("Sent " + publication.DataJson + " to " + publication.Channel + ".");
                 }
                 else
                 {
                     Console.WriteLine("Could not publish. " + publication.Error);
                 }
             }
             </code>
             </example>
             </remarks>
             <param name="publications">The publications to send.</param>
             <returns>The completed publications.</returns>
            </member>
        <member name="T:FM.WebSync.Record">
             <summary>
             A key-value record for binding to a client.
             </summary>
            </member>
        <member name="P:FM.WebSync.Record.Validate">
             <summary>
             Gets or sets whether to skip validation while deserializing.
             </summary>
            </member>
        <member name="P:FM.WebSync.Record.Key">
             <summary>
             Gets or sets the key used to locate the value.
             </summary>
            </member>
        <member name="P:FM.WebSync.Record.Private">
             <summary>
             Gets or sets the flag that indicates whether or not the record is (to be) hidden from other
             clients. If <c>true</c>, the record will only be visible to the source client
             and the server. If <c>false</c> or <c>null</c>, the record will be publicly
             visible to other clients. Defaults to <c>null</c>.
             </summary>
            </member>
        <member name="P:FM.WebSync.Record.ValueJson">
             <summary>
             Gets or sets the record value.  This must be valid JSON.
             </summary>
            </member>
        <member name="M:FM.WebSync.Record.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Record" /> class.
             </summary>
             <param name="key">The key used to locate the value.</param>
            </member>
        <member name="M:FM.WebSync.Record.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Record" /> class.
             </summary>
             <param name="key">The key used to locate the value.</param>
             <param name="valueJson">The value in JSON format.</param>
            </member>
        <member name="M:FM.WebSync.Record.#ctor(System.String,System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Record" /> class.
             </summary>
             <param name="key">The key used to locate the value.</param>
             <param name="valueJson">The value in JSON format.</param>
             <param name="priv">Whether the record is (to be) private.</param>
            </member>
        <member name="M:FM.WebSync.Record.Duplicate">
             <summary>
             Creates a deep clone of this record.
             </summary>
             <returns>A deep clone of this record.</returns>
            </member>
        <member name="M:FM.WebSync.Record.ToJson">
             <summary>
             Serializes the record to JSON.
             </summary>
             <returns>The record in JSON-serialized format.</returns>
            </member>
        <member name="M:FM.WebSync.Record.ToJson(FM.WebSync.Record)">
             <summary>
             Serializes a record to JSON.
             </summary>
             <param name="record">A record to serialize.</param>
             <returns>A JSON-serialized record.</returns>
            </member>
        <member name="M:FM.WebSync.Record.FromJson(System.String)">
             <summary>
             Deserializes a record from JSON.
             </summary>
             <param name="recordJson">A JSON string to deserialize.</param>
             <returns>A deserialized record.</returns>
            </member>
        <member name="M:FM.WebSync.Record.ToJsonMultiple(FM.WebSync.Record[])">
             <summary>
             Serializes a list of records to JSON.
             </summary>
             <param name="records">A list of records to serialize.</param>
             <returns>A JSON-serialized array of records.</returns>
            </member>
        <member name="M:FM.WebSync.Record.FromJsonMultiple(System.String)">
             <summary>
             Deserializes a list of records from JSON.
             </summary>
             <param name="recordsJson">A JSON string to deserialize.</param>
             <returns>A deserialized list of records.</returns>
            </member>
        <member name="M:FM.WebSync.Record.ToString">
             <summary>
             Returns a string that represents this instance.
             </summary>
             <returns>
             A string that represents this instance.
             </returns>
            </member>
        <member name="M:FM.WebSync.Record.GetHashCode">
             <summary>
             Returns a hash code for this instance.
             </summary>
             <returns>
             A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
             </returns>
            </member>
        <member name="M:FM.WebSync.Record.Equals(System.Object)">
             <summary>
             Determines whether the specified object is equal to this instance.
             </summary>
             <param name="obj">The object to compare with this instance.</param>
             <returns>
             	<c>true</c> if the specified object is equal to this instance; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:FM.WebSync.Record.op_Equality(FM.WebSync.Record,FM.WebSync.Record)">
             <summary>
             Implements the operator ==.
             </summary>
             <param name="obj1">The first record.</param>
             <param name="obj2">The second record.</param>
             <returns>The result of the operator.</returns>
            </member>
        <member name="M:FM.WebSync.Record.op_Inequality(FM.WebSync.Record,FM.WebSync.Record)">
             <summary>
             Implements the operator !=.
             </summary>
             <param name="obj1">The first record.</param>
             <param name="obj2">The second record.</param>
             <returns>The result of the operator.</returns>
            </member>
        <member name="T:FM.WebSync.Serializer">
             <summary>
             Provides methods for serializing/deserializing WebSync objects.
             </summary>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeBoundRecords(System.Collections.Generic.Dictionary{System.String,FM.WebSync.Record})">
             <summary>
             Serializes a bound records dictionary to JSON.
             </summary>
             <param name="boundRecords">The bound records to serialize.</param>
             <returns>The serialized bound records.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeBoundRecords(System.String)">
             <summary>
             Deserializes a bound records dictionary from JSON.
             </summary>
             <param name="boundRecordsJson">The bound records (in JSON) to deserialize.</param>
             <returns>The deserialized bound records.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeSubscribedClient(FM.WebSync.SubscribedClient)">
             <summary>
             Serializes a subscribed client to JSON.
             </summary>
             <param name="subscribedClient">The subscribed client to serialize.</param>
             <returns>The serialized subscribed client.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeSubscribedClient(System.String)">
             <summary>
             Deserializes a subscribed client from JSON.
             </summary>
             <param name="subscribedClientJson">The subscribed client (in JSON) to deserialize.</param>
             <returns>The deserialized subscribed client.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeSubscribedClientArray(FM.WebSync.SubscribedClient[])">
             <summary>
             Serializes an array of subscribed client objects to JSON.
             </summary>
             <param name="subscribedClients">The subscribed client objects to serialize.</param>
             <returns>The subscribed client objects as a JSON array.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeSubscribedClientArray(System.String)">
             <summary>
             Deserializes the subscribed client objects from JSON.
             </summary>
             <param name="subscribedClientsJson">The JSON-encoded subscribed clients objects to deserialize.</param>
             <returns>The deserialized subscribed client objects.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializePublishingClient(FM.WebSync.PublishingClient)">
             <summary>
             Serializes a publishing client to JSON.
             </summary>
             <param name="publishingClient">The publishing client to serialize.</param>
             <returns>The serialized publishing client.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializePublishingClient(System.String)">
             <summary>
             Deserializes a publishing client from JSON.
             </summary>
             <param name="publishingClientJson">The publishing client (in JSON) to deserialize.</param>
             <returns>The deserialized publishing client.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeNotifyingClient(FM.WebSync.NotifyingClient)">
             <summary>
             Serializes a notifying client to JSON.
             </summary>
             <param name="notifyingClient">The notifying client to serialize.</param>
             <returns>The serialized notifying client.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeNotifyingClient(System.String)">
             <summary>
             Deserializes a notifying client from JSON.
             </summary>
             <param name="notifyingClientJson">The notifying client (in JSON) to deserialize.</param>
             <returns>The deserialized notifying client.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeExtensions(FM.WebSync.Extensions)">
             <summary>
             Serializes an extensions library to a JSON object.
             </summary>
             <param name="extensions">An extensions library to serialize.</param>
             <returns>A serialized JSON object.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeExtensions(System.String)">
             <summary>
             Deserializes an extensions library from a JSON object.
             </summary>
             <param name="extensionsJson">A JSON object to deserialize.</param>
             <returns>A deserialized extensions library.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeMessage(FM.WebSync.Message)">
             <summary>
             Serializes a message to JSON.
             </summary>
             <param name="message">The message to serialize.</param>
             <returns>The serialized message.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeMessage(System.String)">
             <summary>
             Deserializes a message from JSON.
             </summary>
             <param name="messageJson">The message (in JSON) to deserialize.</param>
             <returns>The deserialized message.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeMessageArray(FM.WebSync.Message[])">
             <summary>
             Serializes a list of messages to JSON.
             </summary>
             <param name="messages">The messages to serialize.</param>
             <returns>The serialized messages.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeMessageArray(System.String)">
             <summary>
             Deserializes a list of messages from JSON.
             </summary>
             <param name="messagesJson">The messages (in JSON) to deserialize.</param>
             <returns>The deserialized messages.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeRecord(FM.WebSync.Record)">
             <summary>
             Serializes a record to JSON.
             </summary>
             <param name="record">The record to serialize.</param>
             <returns>The serialized record.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeRecord(System.String)">
             <summary>
             Deserializes a record from JSON.
             </summary>
             <param name="recordJson">The record (in JSON) to deserialize.</param>
             <returns>The deserialized record.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeRecordArray(FM.WebSync.Record[])">
             <summary>
             Serializes a list of records to JSON.
             </summary>
             <param name="records">The records to serialize.</param>
             <returns>The serialized records.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeRecordArray(System.String)">
             <summary>
             Deserializes a list of records from JSON.
             </summary>
             <param name="recordsJson">The records (in JSON) to deserialize.</param>
             <returns>The deserialized records.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeAdvice(FM.WebSync.Advice)">
             <summary>
             Serializes advice to JSON.
             </summary>
             <param name="advice">The advice to serialize.</param>
             <returns>The serialized advice.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeAdvice(System.String)">
             <summary>
             Deserializes advice from JSON.
             </summary>
             <param name="adviceJson">The advice (in JSON) to deserialize.</param>
             <returns>The deserialized advice.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeBaseAdvice(FM.WebSync.BaseAdvice)">
             <summary>
             Serializes base advice to JSON.
             </summary>
             <param name="baseAdvice">The base advice to serialize.</param>
             <returns>The serialized base advice.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeBaseAdvice(System.String)">
             <summary>
             Deserializes base advice from JSON.
             </summary>
             <param name="baseAdviceJson">The base advice (in JSON) to deserialize.</param>
             <returns>The deserialized base advice.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeReconnect(FM.WebSync.Reconnect)">
             <summary>
             Serializes a reconnect to JSON.
             </summary>
             <param name="reconnect">The reconnect to serialize.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeReconnect(System.String)">
             <summary>
             Deserializes a reconnect from JSON.
             </summary>
             <param name="reconnectJson">The reconnect (in JSON) to deserialize.</param>
             <returns></returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeConnectionType(FM.WebSync.ConnectionType)">
             <summary>
             Serializes a Bayeux connection type to JSON.
             </summary>
             <param name="connectionType">The Bayeux connection type to serialize.</param>
             <returns>The serialized Bayeux connection type.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeConnectionType(System.String)">
             <summary>
             Deserializes a Bayeux connection type from JSON.
             </summary>
             <param name="connectionTypeJson">The Bayeux connection type (in JSON) to deserialize.</param>
             <returns>The deserialized Bayeux connection type.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeConnectionTypeArray(FM.WebSync.ConnectionType[])">
             <summary>
             Serializes a list of Bayeux connection types to JSON.
             </summary>
             <param name="connectionTypes">The list of Bayeux connection types to serialize.</param>
             <returns>The serialized Bayeux connection types.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeConnectionTypeArray(System.String)">
             <summary>
             Deserializes a list of Bayeux connection types from JSON.
             </summary>
             <param name="connectionTypesJson">The list of Bayeux connection types (in JSON) to deserialize.</param>
             <returns>The deserialized Bayeux connection types.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializePublication(FM.WebSync.Publication)">
             <summary>
             Serializes a publication to JSON.
             </summary>
             <param name="publication">The publication to serialize.</param>
             <returns>The serialized publication.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializePublication(System.String)">
             <summary>
             Deserializes a publication from JSON.
             </summary>
             <param name="publicationJson">The publication (in JSON) to deserialize.</param>
             <returns>The deserialized publication.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializePublicationArray(FM.WebSync.Publication[])">
             <summary>
             Serializes a list of publications to JSON.
             </summary>
             <param name="publications">The publications to serialize.</param>
             <returns>The serialized publications.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializePublicationArray(System.String)">
             <summary>
             Deserializes a list of publications from JSON.
             </summary>
             <param name="publicationsJson">The publications (in JSON) to deserialize.</param>
             <returns>The deserialized publications.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeNotification(FM.WebSync.Notification)">
             <summary>
             Serializes a notification to JSON.
             </summary>
             <param name="notification">The notification to serialize.</param>
             <returns>The serialized notification.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeNotification(System.String)">
             <summary>
             Deserializes a notification from JSON.
             </summary>
             <param name="notificationJson">The notification (in JSON) to deserialize.</param>
             <returns>The deserialized notification.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeNotificationArray(FM.WebSync.Notification[])">
             <summary>
             Serializes a list of notifications to JSON.
             </summary>
             <param name="notifications">The notifications to serialize.</param>
             <returns>The serialized notifications.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeNotificationArray(System.String)">
             <summary>
             Deserializes a list of Bayeux notifications from JSON.
             </summary>
             <param name="notificationsJson">The Bayeux notifications (in JSON) to deserialize.</param>
             <returns>The deserialized Bayeux notifications.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.SerializeTimestamp(System.Nullable{System.DateTime})">
             <summary>
             Serializes a timestamp into Bayeux JSON format.
             </summary>
             <param name="timestamp">The timestamp as a DateTime object.</param>
             <returns>The timestamp as a Bayeux JSON string.</returns>
            </member>
        <member name="M:FM.WebSync.Serializer.DeserializeTimestamp(System.String)">
             <summary>
             Converts a timestamp from a Bayeux JSON string to a DateTime object.
             </summary>
             <param name="timestampJson">The timestamp as a Bayeux JSON string.</param>
             <returns>The timestamp as a DateTime object.</returns>
            </member>
        <member name="T:FM.WebSync.WebSocketMessageTransfer">
             <summary>
             Base class that defines methods for transferring messages over HTTP.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.Url">
             <summary>
             Gets or sets the URL.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.HandshakeTimeout">
             <summary>
             Gets or sets the timeout for the initial handshake.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.StreamTimeout">
             <summary>
             Gets or sets the timeout for the stream.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.Sender">
             <summary>
             Gets or sets the sender of the messages.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.OnRequestCreated">
             <summary>
             Gets or sets the callback to invoke when the handshake request is created.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.OnResponseReceived">
             <summary>
             Gets or sets the callback to invoke when the handshake response is received.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.OnOpenSuccess">
             <summary>
             Gets or sets the callback to invoke if the handshake succeeds.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.OnOpenFailure">
             <summary>
             Gets or sets the callback to invoke if the handshake fails.
             </summary>
            </member>
        <member name="P:FM.WebSync.WebSocketMessageTransfer.OnStreamFailure">
             <summary>
             Gets or sets the callback to invoke if the stream errors out.
             </summary>
            </member>
        <member name="M:FM.WebSync.WebSocketMessageTransfer.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.WebSocketMessageTransfer" /> class.
             </summary>
             <param name="url">The URL.</param>
            </member>
        <member name="M:FM.WebSync.WebSocketMessageTransfer.Open(System.Collections.Specialized.NameValueCollection)">
             <summary>
             Opens the socket.
             </summary>
             <param name="headers">The headers to pass in with the initial handshake.</param>
            </member>
        <member name="M:FM.WebSync.WebSocketMessageTransfer.SendMessages(FM.WebSync.MessageRequestArgs)">
             <summary>
             Sends a request synchronously.
             </summary>
             <param name="requestArgs">The request parameters.</param>
             <returns>
             The response parameters.
             </returns>
            </member>
        <member name="M:FM.WebSync.WebSocketMessageTransfer.SendMessagesAsync(FM.WebSync.MessageRequestArgs,FM.SingleAction{FM.WebSync.MessageResponseArgs})">
             <summary>
             Sends a request asynchronously.
             </summary>
             <param name="requestArgs">The request parameters.</param>
             <param name="callback">The callback to execute with the response parameters.</param>
            </member>
        <member name="M:FM.WebSync.WebSocketMessageTransfer.Shutdown">
             <summary>
             Releases any resources and shuts down.
             </summary>
            </member>
        <member name="T:FM.WebSync.Subscription">
             <summary>
             A channel/tag identifier for a client subscription.
             </summary>
            </member>
        <member name="P:FM.WebSync.Subscription.Channel">
             <summary>
             Gets or sets the subscription channel.
             </summary>
            </member>
        <member name="P:FM.WebSync.Subscription.Tag">
             <summary>
             Gets or sets the identifier for the subscription.
             </summary>
            </member>
        <member name="M:FM.WebSync.Subscription.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Subscription" /> class.
             </summary>
             <param name="channel">The subscription channel.</param>
            </member>
        <member name="M:FM.WebSync.Subscription.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.Subscription" /> class.
             </summary>
             <param name="channel">The subscription channel.</param>
             <param name="tag">The identifier for the subscription.</param>
            </member>
        <member name="M:FM.WebSync.Subscription.Duplicate">
             <summary>
             Creates a deep clone of this subscription.
             </summary>
             <returns>A deep clone of this subscription.</returns>
            </member>
        <member name="M:FM.WebSync.Subscription.ToJson">
             <summary>
             Serializes the record to JSON.
             </summary>
             <returns>The record in JSON-serialized format.</returns>
            </member>
        <member name="M:FM.WebSync.Subscription.ToJson(FM.WebSync.Subscription)">
             <summary>
             Serializes a subscription to JSON.
             </summary>
             <param name="subscription">A subscription to serialize.</param>
             <returns>A JSON-serialized subscription.</returns>
            </member>
        <member name="M:FM.WebSync.Subscription.FromJson(System.String)">
             <summary>
             Deserializes a subscription from JSON.
             </summary>
             <param name="subscriptionJson">A JSON string to deserialize.</param>
             <returns>A deserialized subscription.</returns>
            </member>
        <member name="M:FM.WebSync.Subscription.ToJsonMultiple(FM.WebSync.Subscription[])">
             <summary>
             Serializes a list of subscriptions to JSON.
             </summary>
             <param name="subscriptions">A list of subscriptions to serialize.</param>
             <returns>A JSON-serialized array of subscriptions.</returns>
            </member>
        <member name="M:FM.WebSync.Subscription.FromJsonMultiple(System.String)">
             <summary>
             Deserializes a list of subscriptions from JSON.
             </summary>
             <param name="subscriptionsJson">A JSON string to deserialize.</param>
             <returns>A deserialized list of subscriptions.</returns>
            </member>
        <member name="M:FM.WebSync.Subscription.GetHashCode">
             <summary>
             Returns a hash code for this instance.
             </summary>
             <returns>
             A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
             </returns>
            </member>
        <member name="M:FM.WebSync.Subscription.Equals(System.Object)">
             <summary>
             Determines whether the specified <see cref="T:FM.WebSync.Subscription" /> is equal to this instance.
             </summary>
             <param name="obj">The <see cref="T:FM.WebSync.Subscription" /> to compare with this instance.</param>
             <returns>
               <c>true</c> if the specified <see cref="T:FM.WebSync.Subscription" /> is equal to this instance; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:FM.WebSync.Subscription.op_Equality(FM.WebSync.Subscription,FM.WebSync.Subscription)">
             <summary>
             Implements the operator ==.
             </summary>
             <param name="obj1">The first subscription.</param>
             <param name="obj2">The second subscription.</param>
             <returns>
             The result of the operator.
             </returns>
            </member>
        <member name="M:FM.WebSync.Subscription.op_Inequality(FM.WebSync.Subscription,FM.WebSync.Subscription)">
             <summary>
             Implements the operator !=.
             </summary>
             <param name="obj1">The first subscription.</param>
             <param name="obj2">The second subscription.</param>
             <returns>
             The result of the operator.
             </returns>
            </member>
        <member name="T:FM.WebSync.SubscribedClient">
             <summary>
             Details about the subscribed client.
             </summary>
            </member>
        <member name="M:FM.WebSync.SubscribedClient.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.SubscribedClient" /> class.
             </summary>
            </member>
        <member name="M:FM.WebSync.SubscribedClient.#ctor(System.Guid,System.Collections.Generic.Dictionary{System.String,FM.WebSync.Record})">
             <summary>
             Initializes a new instance of the <see cref="T:FM.WebSync.SubscribedClient" /> class.
             </summary>
             <param name="clientId">The subscribed client's ID.</param>
             <param name="boundRecords">The records bound to the client.</param>
            </member>
        <member name="P:FM.WebSync.SubscribedClient.ClientId">
             <summary>
             Gets or sets the subscribed client's ID.
             </summary>
            </member>
        <member name="P:FM.WebSync.SubscribedClient.BoundRecords">
             <summary>
             Gets or sets the subscribed client's bound records.
             </summary>
            </member>
        <member name="M:FM.WebSync.SubscribedClient.GetBoundRecordValueJson(System.String)">
             <summary>
             Gets the JSON value of a record bound to the subscribed client.
             </summary>
             <param name="key">The record key.</param>
             <returns>The JSON value of the record, if it exists, or <c>null</c>.</returns>
            </member>
        <member name="M:FM.WebSync.SubscribedClient.ToJson">
             <summary>
             Serializes this instance to JSON.
             </summary>
             <returns>The JSON-formatted subscribed client.</returns>
            </member>
        <member name="M:FM.WebSync.SubscribedClient.ToJson(FM.WebSync.SubscribedClient)">
             <summary>
             Serializes a subscribed client to JSON.
             </summary>
             <param name="subscribedClient">The subscribed client to serialize.</param>
             <returns>The JSON-formatted subscribed client.</returns>
            </member>
        <member name="M:FM.WebSync.SubscribedClient.FromJson(System.String)">
             <summary>
             Deserializes a JSON-formatted subscribed client.
             </summary>
             <param name="subscribedClientJson">The JSON-formatted subscribed client to deserialize.</param>
             <returns>The subscribed client.</returns>
            </member>
        <member name="M:FM.WebSync.SubscribedClient.ToJsonMultiple(FM.WebSync.SubscribedClient[])">
             <summary>
             Serializes an array of subscribed clients to JSON.
             </summary>
             <param name="subscribedClients">The array of subscribed clients to serialize.</param>
             <returns>The JSON-formatted array of subscribed clients.</returns>
            </member>
        <member name="M:FM.WebSync.SubscribedClient.FromJsonMultiple(System.String)">
             <summary>
             Deserializes a JSON-formatted array of subscribed clients.
             </summary>
             <param name="subscribedClientsJson">The JSON-formatted array of subscribed clients to deserialize.</param>
             <returns>The array of subscribed clients.</returns>
            </member>
    </members>
</doc>
